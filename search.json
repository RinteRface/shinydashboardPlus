[{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"/articles/box-elements.html","id":"boxes-components","dir":"Articles","previous_headings":"","what":"Boxes components","title":"Box Elements","text":"shinydashboardPlus brings tons new elements include boxes elsewhere. partially described previous vignette.","code":""},{"path":"/articles/box-elements.html","id":"description-block","dir":"Articles","previous_headings":"Boxes components","what":"Description Block","title":"Box Elements","text":"descriptionBlock() sub-container may included box(). convenient display metrics. Code","code":"library(shiny) library(shinydashboard) library(shinydashboardPlus)  shinyApp(   ui = dashboardPage(     dashboardHeader(),     dashboardSidebar(),     dashboardBody(      box(       solidHeader = FALSE,       title = \"Status summary\",       background = NULL,       width = 4,       status = \"danger\",       footer = fluidRow(         column(           width = 6,           descriptionBlock(             number = \"17%\",              numberColor = \"green\",              numberIcon = icon(\"caret-up\"),             header = \"$35,210.43\",              text = \"TOTAL REVENUE\",              rightBorder = TRUE,             marginBottom = FALSE           )         ),         column(           width = 6,           descriptionBlock(             number = \"18%\",              numberColor = \"red\",              numberIcon = icon(\"caret-down\"),             header = \"1200\",              text = \"GOAL COMPLETION\",              rightBorder = FALSE,             marginBottom = FALSE           )         )       )      )     ),     title = \"Description Block\"   ),   server = function(input, output) { }  )"},{"path":[]},{"path":"/articles/controlbar.html","id":"extra-template-elements","dir":"Articles","previous_headings":"","what":"Extra template elements","title":"Extra Skeleton Elements","text":"shinydashboard skeleton elements : dashboardPage() (page wrapper) dashboardHeader() (navbar) dashboardSidebar() (left sidebar) However, AdminLTE footer right sidebar, also known controlbar. footer usually good place put contact information like mail, authors copyrights, controlbar may contain secondary inputs extra options necessary shown app.","code":""},{"path":[]},{"path":"/articles/controlbar.html","id":"basics","dir":"Articles","previous_headings":"Extra template elements > Controlbar","what":"Basics","title":"Extra Skeleton Elements","text":"include controlbar, use dashboardControlbar() dedicated controlbar parameter. several options: id used capture current state controlbar (open closed) programmatically toggle updateControlbar(). useful controlbar open result another action, indicate users play collapsed indicated whether sidebar opened closed start overlay controls collapse behavior, whether controlbar push body content left. default, cover body content. Note may also control behavior via dashboardPagge() option parameter! skin cosmetic parameter 2 values: dark light default value dark. Importantly, global theme option impact controlbar background app show open controlbar start.","code":"library(shiny) library(shinydashboard) library(shinydashboardPlus) shinyApp(   ui = dashboardPage(     header = dashboardHeader(),     sidebar = dashboardSidebar(),     body = dashboardBody(),     controlbar = dashboardControlbar(collapsed = FALSE),     title = \"DashboardPage\"   ),   server = function(input, output) { } )"},{"path":"/articles/controlbar.html","id":"include-menus","dir":"Articles","previous_headings":"Extra template elements > Controlbar","what":"Include menus","title":"Extra Skeleton Elements","text":"dashboardControlbar function also accepts contain tabs, similarly dashboardSidebar() navigation menu. controlbarMenu() modified shiny::tabsetPanel() optional id control select item server side updateControlbarMenu(). selected indicates item must selected default. use case controlbar menu: best practice limit number controlbarItem 5 since horizontal space rather limited.","code":"menu <- controlbarMenu(   id = \"controlbarMenu\",   controlbarItem(     \"Tab 1\",     \"Welcome to tab 1\"   ),   controlbarItem(     \"Tab 2\",     numericInput(\"num\", \"Observations:\", 200, min = 1, max = 1000, step = 100)   ) )  shinyApp(   ui = dashboardPage(     header = dashboardHeader(),     sidebar = dashboardSidebar(),     body = dashboardBody(),     controlbar = dashboardControlbar(       skin = \"dark\",       menu     ),     title = \"Right Sidebar\"   ),   server = function(input, output) { } )"},{"path":"/articles/controlbar.html","id":"the-controlbar-api","dir":"Articles","previous_headings":"Extra template elements > Controlbar","what":"The controlbar API","title":"Extra Skeleton Elements","text":"mentioned , powerful feature possibility control elements server. example , main sidebar 3 items, item open specific menu item controlbar. first create 3 generic sidebar menu items using lapply. Note controlbar menu defined previous example. input$sidebarMenu takes values menu_1, menu_2 menu_3. server side, recover item index splitting input value follows strsplit(input$sidebarMenu, \"_\")[[1]][2]. may conditionally open controlbar depending index value. update controlbar menu function update controlbar menu item according index value, updateControlbarMenu(\"controlbarMenu\", selected = idx). include even interactivity, listen input$controlbarMenu. second item clicked, toggle box sidebar updateBoxSidebar(\"boxSidebar\"). conclusion, may imagine lot situations. Code","code":"sidebarMenu(   id = \"sidebarMenu\",   lapply(1:3, function(i) {     menuItem(       sprintf(\"Menu %s\", i),        tabName = sprintf(\"menu_%s\", i),        icon = icon(\"circle\")     )   }) ) shinyApp(   ui = dashboardPage(     header = dashboardHeader(),     sidebar = dashboardSidebar(       minified = TRUE,        collapsed = TRUE,       sidebarMenu(         id = \"sidebarMenu\",         lapply(1:3, function(i) {           menuItem(             sprintf(\"Menu %s\", i),              tabName = sprintf(\"menu_%s\", i),              icon = icon(\"circle\")           )         })       )     ),     body = dashboardBody(       tabItems(         tabItem(tabName = \"menu_1\", \"Content 1\"),          tabItem(           tabName = \"menu_2\",           box(             title = \"Always the same plot!\",             collapsible = TRUE,              plotOutput(\"distPlot\"),             sidebar = boxSidebar(               id = \"boxSidebar\",               background = \"#808080\",               width = \"50%\",               sliderInput(                 \"obs\",                  \"Number of observations:\",                 min = 0,                 max = 1000,                  value = 500               )             )           )         )       )     ),     controlbar = dashboardControlbar(       id = \"controlbar\",       menu     ),     title = \"DashboardPage\"   ),   server = function(input, output, session) {     output$distPlot <- renderPlot({       hist(rnorm(input$obs))     })     # Switch controlbar menu based on sidebar item value. Moreover     # if the sidebar menu item is 2, the controlbar opens     observeEvent(input$sidebarMenu, {       idx <- strsplit(input$sidebarMenu, \"_\")[[1]][2]       if (idx == 2) {         updateControlbar(\"controlbar\")       }       updateControlbarMenu(\"controlbarMenu\", selected = idx)     })          # Clicking on the second controlbar item makes the box sidebar open     observeEvent(input$controlbarMenu, {       if (input$controlbarMenu == \"Tab 2\") updateBoxSidebar(\"boxSidebar\")     })          observeEvent(input$num, {       updateSliderInput(session, \"obs\", value = input$num)     }, ignoreInit = TRUE)        } )"},{"path":"/articles/controlbar.html","id":"footer","dir":"Articles","previous_headings":"Extra template elements","what":"Footer","title":"Extra Skeleton Elements","text":"surprisingly dashboardFooter() creates footer element. 2 slots, left right, respectively.","code":"shinyApp(    ui = dashboardPage(      header = dashboardHeader(),      sidebar = dashboardSidebar(),      body = dashboardBody(),      footer = dashboardFooter(left = \"Left content\", right = \"Right content\"),      title = \"DashboardPage\"    ),    server = function(input, output) { }  )"},{"path":"/articles/css-preloader.html","id":"how-to-set-up-a-preloader","dir":"Articles","previous_headings":"","what":"How to set up a preloader?","title":"CSS preloaders","text":"Pass argument preloader dashboardPage() function. expects nested list containing parameters necessary waiter::waiterShowOnLoad. Please look waiter documentation details. ’s ! Code","code":"library(shiny) library(shinydashboard) library(shinydashboardPlus) library(waiter) shinyApp(   ui = dashboardPage(     preloader = list(html = tagList(spin_1(), \"Loading ...\"), color = \"#3c8dbc\"),     header = dashboardHeader(),     sidebar = dashboardSidebar(),     body = dashboardBody(       actionButton(\"reload\", \"Reload\")     ),     title = \"Preloader\"   ),   server = function(input, output, session) {     # fake reload     observeEvent(input$reload, {       session$reload()     })   } )"},{"path":"/articles/enhanced-header.html","id":"left-navbar-elements","dir":"Articles","previous_headings":"","what":"Left Navbar Elements","title":"Enhanced Header Elements","text":"default shinydashboard, elements included navbar displayed right side. shinydashboardPlus new option add elements left part dashboardHeader(). items must passed leftUi argument (multiple elements, must wrapped tagList(), shown ). new feature perfectly works dropdownButton() shinyWidgets packages dreamRs (long screen size large enough), well classic dropdownMenu() shinydashboard. individual elements, result may good, mainly space reason. Indeed, sliderInput() optimized embedded header since label takes much space. require CSS tricks, namely, reducing slider size, philosophy shinydashboardPlus.","code":"library(shiny) library(shinyWidgets) library(shinydashboard) library(shinydashboardPlus)  shinyApp(    ui = dashboardPage(      header = dashboardHeader(        leftUi = tagList(          dropdownButton(            label = \"Controls\",            icon = icon(\"sliders-h\"),            status = \"primary\",            circle = FALSE,            sliderInput(              inputId = \"n\",              label = \"Number of observations\",              min = 10, max = 100, value = 30            ),            prettyToggle(              inputId = \"na\",              label_on = \"NAs kept\",              label_off = \"NAs removed\",              icon_on = icon(\"check\"),              icon_off = icon(\"trash\")            )          ),          dropdownMenu(            type = \"messages\",             badgeStatus = \"success\",            messageItem(from = \"Support Team\", message = \"This is the content of a message.\", time = \"5 mins\"),            messageItem(from = \"Support Team\", message = \"This is the content of another message.\", time = \"2 hours\"),            messageItem(from = \"New User\", message = \"Can I get some help?\", time = \"Today\")          )        )      ),      sidebar = dashboardSidebar(),      body = dashboardBody(        setShadow(class = \"dropdown-menu\")      ),      title = \"DashboardPage\"    ),    server = function(input, output) { }  )"},{"path":"/articles/enhanced-header.html","id":"improved-dropdownmenu","dir":"Articles","previous_headings":"","what":"Improved dropdownMenu()","title":"Enhanced Header Elements","text":"new function dropdownBlock() make easy embed input elements left navbar menu. hide user click inside optimized correctly render mobile devices (contrary dropdownButton(), see ).","code":"shinyApp(   ui = dashboardPage(     header = dashboardHeader(       leftUi = tagList(         dropdownBlock(           id = \"mydropdown\",           title = \"Dropdown 1\",           icon = \"sliders-h\",           sliderInput(             inputId = \"n\",             label = \"Number of observations\",             min = 10, max = 100, value = 30           ),           prettyToggle(             inputId = \"na\",             label_on = \"NAs kept\",             label_off = \"NAs removed\",             icon_on = icon(\"check\"),             icon_off = icon(\"trash\")           )         ),         dropdownBlock(           id = \"mydropdown2\",           title = \"Dropdown 2\",           icon = \"sliders-h\",           prettySwitch(             inputId = \"switch4\",             label = \"Fill switch with status:\",             fill = TRUE,              status = \"primary\"           ),           prettyCheckboxGroup(             inputId = \"checkgroup2\",             label = \"Click me!\",              thick = TRUE,             choices = c(\"Click me !\", \"Me !\", \"Or me !\"),             animation = \"pulse\",              status = \"info\"           )         )       )     ),     sidebar = dashboardSidebar(),     body = dashboardBody(       setShadow(class = \"dropdown-menu\")     ),     title = \"DashboardPage\"   ),   server = function(input, output) { } )"},{"path":[]},{"path":"/articles/enhanced-header.html","id":"enhanced-dropdownmenu-items","dir":"Articles","previous_headings":"Other navbar items","what":"Enhanced dropdownMenu Items","title":"Enhanced Header Elements","text":"shinydashboardPlus, taskItem(), messageItem() notificationItem new inputId parameter allowing behave like shiny::actionButton. always quite frustrating able interact elements shinydashboard.","code":""},{"path":"/articles/enhanced-header.html","id":"dashboarduser-component","dir":"Articles","previous_headings":"Other navbar items","what":"dashboardUser Component","title":"Enhanced Header Elements","text":"spirit sidebarUserPanel() display user informations sidebar, brand new dashboardUser() dropdown component may used admin panel display information. dashboardUserItem() provides refined column container. Code","code":"library(shiny) library(shinydashboard) library(shinydashboardPlus)  shinyApp(   ui = dashboardPage(     header = dashboardHeader(userOutput(\"user\")),     sidebar = dashboardSidebar(),     body = dashboardBody(),     title = \"User dropdown\"   ),   server = function(input, output) {    output$user <- renderUser({     dashboardUser(        name = \"Divad Nojnarg\",         image = \"https://adminlte.io/themes/AdminLTE/dist/img/user2-160x160.jpg\",         title = \"shinydashboardPlus\",        subtitle = \"Author\",         footer = p(\"The footer\", class = \"text-center\"),        fluidRow(         dashboardUserItem(          width = 6,          socialButton(           href = \"https://dropbox.com\",           icon = icon(\"dropbox\")          )         ),         dashboardUserItem(          width = 6,          socialButton(           href = \"https://github.com\",           icon = icon(\"github\")          )         )        )       )    })   }  )"},{"path":"/articles/extra-elements.html","id":"accordion","dir":"Articles","previous_headings":"","what":"Accordion","title":"Extra Elements","text":"Accordions category collapsible elements. collapsible items don’t alter state items collapsible container, accordion item toggle opened accordion, ensure 1 item visible . accordion() expects contain accordionItems. Importantly, guaranty uniqueness accordion, must provide id parameter. parameter allows programmatically toggle accordion item, updateAccordion function. Code","code":"library(shiny) library(shinydashboard) library(shinydashboardPlus)  shinyApp(   ui = dashboardPage(     dashboardHeader(),     dashboardSidebar(),     dashboardBody(       radioButtons(\"controller\", \"Controller\", choices = c(1, 2)),       br(),       accordion(        id = \"accordion1\",         accordionItem(           title = \"Accordion 1 Item 1\",           status = \"danger\",           collapsed = TRUE,           \"This is some text!\"         ),         accordionItem(           title = \"Accordion 1 Item 2\",           status = \"warning\",           collapsed = FALSE,           \"This is some text!\"         )       ),       accordion(        id = \"accordion2\",         accordionItem(           title = \"Accordion 2 Item 1\",           status = \"info\",           collapsed = TRUE,           \"This is some text!\"         ),         accordionItem(           title = \"Accordion 2 Item 2\",           status = \"success\",           collapsed = FALSE,           \"This is some text!\"         )       )     ),     title = \"Accordion\"   ),   server = function(input, output, session) {     observeEvent(input$controller, {       updateAccordion(id = \"accordion1\", selected = input$controller)     })          observe(print(input$accordion1))          observeEvent(input$accordion1, {       showNotification(sprintf(\"You selected accordion N° %s\", input$accordion1), type = \"message\")     })   }  )"},{"path":"/articles/extra-elements.html","id":"user-messages","dir":"Articles","previous_headings":"","what":"User messages","title":"Extra Elements","text":"shinydashboardPlus make possible create entire chat system within Shiny app. userMessages() main container, userMessage() message element. updateUserMessages() looks userMessages() id : remove existing message add new message edit existing message Importantly, assume message structure composed follows: type parameter controls message background color. sent message, color inherited userMessages() status, received message, color gray default. text argument refers message content. may simple text, shiny tags event combinations shiny inputs/ouput, shown example. Code","code":"list(   author = \"David\",   date = \"Now\",   image = \"https://i.pinimg.com/originals/f1/15/df/f115dfc9cab063597b1221d015996b39.jpg\",   type = \"received\",   text = \"A new message\" shinyApp(   ui = dashboardPage(     dashboardHeader(),     dashboardSidebar(),     dashboardBody(       fluidRow(         actionButton(\"remove\", \"Remove message\"),         actionButton(\"add\", \"Add message\"),         actionButton(\"update\", \"Update message\")       ),       numericInput(\"index\", \"Message index:\", 1, min = 1, max = 3),       br(),       br(),       userMessages(         width = 6,         status = \"danger\",         id = \"message\",         userMessage(           author = \"Alexander Pierce\",           date = \"20 Jan 2:00 pm\",           image = \"https://adminlte.io/themes/AdminLTE/dist/img/user1-128x128.jpg\",           type = \"received\",           \"Is this template really for free? That's unbelievable!\"         ),         userMessage(           author = \"Sarah Bullock\",           date = \"23 Jan 2:05 pm\",           image = \"https://adminlte.io/themes/AdminLTE/dist/img/user3-128x128.jpg\",           type = \"sent\",           \"You better believe it!\"         )       )     ),     title = \"user Message\"   ),   server = function(input, output, session) {     observeEvent(input$remove, {       updateUserMessages(\"message\", action = \"remove\", index = input$index)     })     observeEvent(input$add, {       updateUserMessages(         \"message\",          action = \"add\",          content = list(           author = \"David\",           date = \"Now\",           image = \"https://i.pinimg.com/originals/f1/15/df/f115dfc9cab063597b1221d015996b39.jpg\",           type = \"received\",           text = \"A new message\"         )       )     })          output$distPlot <- renderPlot({      hist(rnorm(input$obs))     })          observeEvent(input$update, {       updateUserMessages(         \"message\",          action = \"update\",          index = input$index,         content = list(          text = tagList(           appButton(            inputId = \"reload\",            label = \"Click me!\",             icon = icon(\"sync\"),             dashboardBadge(1, color = \"orange\")           )          )         )       )     })          observeEvent(input$reload, {      showNotification(\"Yeah!\", duration = 1, type = \"default\")     })   }  )"},{"path":[]},{"path":"/articles/improved-boxes.html","id":"the-box-state","dir":"Articles","previous_headings":"Boxes on Steroids!","what":"The box state","title":"Improved boxes","text":"box() without doubt central component shinydashboard. Thanks AdminLTE API, shinydashboardPlus able provide interactivity component. instance, may: Know state box time. state captures different parameters collapsed, closed, … Toggle box Close/Restore box update box properties: title, status, solidHeader, background, width, height, collapsible closable benefit feature, one must pass id parameter access server side input$<id>. Let’s consider example. Code call updateBox() function, specifying action accomplish: toggle remove restore update Knowing state box significantly opens new possibilities within application, thereby increasing interactivity. Additionally, toggle animation speed (0.5s 0.1s) reduce latency. want know underlying mechanisms, look box widget documentation.","code":"library(shiny) library(shinydashboard) library(shinydashboardPlus) ui <- dashboardPage(   title = \"Box API\",   dashboardHeader(),   dashboardSidebar(),   dashboardBody(     tags$style(\"body { background-color: ghostwhite}\"),     fluidRow(       actionButton(\"toggle_box\", \"Toggle Box\"),       actionButton(\"remove_box\", \"Remove Box\", class = \"bg-danger\"),       actionButton(\"restore_box\", \"Restore Box\", class = \"bg-success\"),       actionButton(\"update_box\", \"Update Box\", class = \"bg-primary\")     ),     br(),     box(       title = textOutput(\"box_state\"),       \"Box body\",       id = \"mybox\",       collapsible = TRUE,       closable = TRUE,       plotOutput(\"plot\")     )   ) )  server <- function(input, output, session) {   output$plot <- renderPlot({     req(!input$mybox$collapsed)     plot(rnorm(200))   })    output$box_state <- renderText({     state <- if (input$mybox$collapsed) \"collapsed\" else \"uncollapsed\"     paste(\"My box is\", state)   })    observeEvent(input$toggle_box, {     updateBox(\"mybox\", action = \"toggle\")   })    observeEvent(input$remove_box, {     updateBox(\"mybox\", action = \"remove\")   })    observeEvent(input$restore_box, {     updateBox(\"mybox\", action = \"restore\")   })    observeEvent(input$update_box, {     updateBox(       \"mybox\",       action = \"update\",       options = list(         title = h2(\"New title\", dashboardLabel(1, status = \"primary\")),         status = \"danger\",         solidHeader = TRUE,         width = 4       )     )   })    observeEvent(input$mybox$visible, {     collapsed <- if (input$mybox$collapsed) \"collapsed\" else \"uncollapsed\"     visible <- if (input$mybox$visible) \"visible\" else \"hidden\"     message <- paste(\"My box is\", collapsed, \"and\", visible)     showNotification(message, type = \"warning\", duration = 1)   }) }  shinyApp(ui, server)"},{"path":"/articles/improved-boxes.html","id":"box-components","dir":"Articles","previous_headings":"Boxes on Steroids!","what":"Box components","title":"Improved boxes","text":"shinydashboardPlus, may embed labels, sidebar dropdown menus box header. Box Tools. DFrom left right: boxLabel, boxDropdown, collapsible closable buttons, boxSidebar trigger.","code":""},{"path":"/articles/improved-boxes.html","id":"box-labels","dir":"Articles","previous_headings":"Boxes on Steroids! > Box components","what":"Box Labels","title":"Improved boxes","text":"boxLabel() passed box() label slot. typically contain number short text.","code":""},{"path":"/articles/improved-boxes.html","id":"box-sidebar","dir":"Articles","previous_headings":"Boxes on Steroids! > Box components","what":"Box Sidebar","title":"Improved boxes","text":"boxSidebar() invoked box() sidebar parameter. sidebar id allowing programmatically toggle server side updateBoxSidebar(). component generally used contain input element don’t want show box, box body generally contains visualizations plots tables. boxSidebar() highly customizable one may change background color, width icon trigger, latter displayed right side box header, depicted Figure @ref(fig:boxTools). example showing set sidebar toggle . Code interest able toggle sidebar server? Image want open sidebar soon user clicks specific action button. definitely possible.","code":"shinyApp(   ui = dashboardPage(     header = dashboardHeader(),     body = dashboardBody(       box(         title = \"Update box sidebar\",         closable = TRUE,         width = 12,         height = \"500px\",         solidHeader = FALSE,         collapsible = TRUE,         actionButton(\"update\", \"Toggle card sidebar\"),         sidebar = boxSidebar(           id = \"mycardsidebar\",           width = 25,           sliderInput(             \"obs\",             \"Number of observations:\",             min = 0,             max = 1000,             value = 500           )         ),         plotOutput(\"distPlot\")       )     ),     sidebar = dashboardSidebar()   ),   server = function(input, output, session) {     observe(print(input$mycardsidebar))      output$distPlot <- renderPlot({       hist(rnorm(input$obs))     })      observeEvent(input$update, {       updateBoxSidebar(\"mycardsidebar\")     })   } )"},{"path":"/articles/improved-boxes.html","id":"box-dropdown","dir":"Articles","previous_headings":"Boxes on Steroids! > Box components","what":"Box Dropdown","title":"Improved boxes","text":"boxDropdown() super powerful tool since dropdown items may behave like action buttons. feature allows seamlessly add interactivity box component gather features one place. example , clicking first item triggers Shiny notification. Code","code":"shinyApp(   ui = dashboardPage(     dashboardHeader(),     dashboardSidebar(),     dashboardBody(       box(         title = \"Closable Box with dropdown\",         closable = TRUE,         width = 12,         status = \"warning\",         solidHeader = FALSE,         collapsible = TRUE,         dropdownMenu = boxDropdown(           boxDropdownItem(\"Click me\", id = \"dropdownItem\", icon = icon(\"heart\")),           boxDropdownItem(\"item 2\", href = \"https://www.google.com/\"),           dropdownDivider(),           boxDropdownItem(\"item 3\", icon = icon(\"th\"))         ),         \"My box\"       )     )   ),   server = function(input, output) {     observeEvent(input$dropdownItem, {       showNotification(\"Hello\", duration = 1, type = \"message\")     })   } )"},{"path":"/articles/improved-boxes.html","id":"other-boxes","dir":"Articles","previous_headings":"Boxes on Steroids!","what":"Other Boxes","title":"Improved boxes","text":"shinydashboardPlus provides box components able adapt various situations. wanted create box comments, social content?","code":""},{"path":"/articles/improved-boxes.html","id":"userbox","dir":"Articles","previous_headings":"Boxes on Steroids! > Other Boxes","what":"userBox","title":"Improved boxes","text":"userBox() intended highlight user profiles. many common parameters box() overall layout. 2 major differences box() userBox() : ability add user image box header. Optionally add background image box header. color parameter applied box header. Additionally, may also select 2 types: centered image left-aligned image. title argument expects userDescription(): may also select 2 types: centered image left-aligned image, shown Figure . userBox components userBox() plays well components like navPills(), shown . Code userBox() also entirely updatable server side, built top box() function: Code","code":"userDescription(   title = \"Nadia Carmichael\",   subtitle = \"lead Developer\",   type = 2,   image = \"https://adminlte.io/themes/AdminLTE/dist/img/user7-128x128.jpg\", ) shinyApp(   ui = dashboardPage(     dashboardHeader(),     dashboardSidebar(),     dashboardBody(       userBox(         title = userDescription(           title = \"Nadia Carmichael\",           subtitle = \"lead Developer\",           type = 2,           image = \"https://adminlte.io/themes/AdminLTE/dist/img/user7-128x128.jpg\",         ),         status = \"warning\",         navPills(           id = \"pillItem\",           navPillsItem(             left = \"Item 1\",             color = \"green\",             right = 10           ),           navPillsItem(             left = \"Item 2\",             color = \"red\",             icon = icon(\"angle-down\"),             right = \"10%\"           )         ),         footer = \"The footer here!\"       )     ),     title = \"userBox\"   ),   server = function(input, output) {     observeEvent(input$pillItem, {       if (input$pillItem == 2) {         showModal(           modalDialog(\"A modal\")         )       }     })      observeEvent(input$pillItem, {       showNotification(         sprintf(\"You clicked on pill N° %s\", input$pillItem),         type = \"warning\",         duration = 1       )     })   } ) shinyApp(   ui = dashboardPage(     dashboardHeader(),     dashboardSidebar(),     dashboardBody(       actionButton(\"update_box\", \"Update\"),       userBox(         id = \"userbox\",         title = userDescription(           title = \"Nadia Carmichael\",           subtitle = \"lead Developer\",           type = 2,           image = \"https://adminlte.io/themes/AdminLTE/dist/img/user7-128x128.jpg\",         ),         status = \"primary\",         gradient = TRUE,         background = \"light-blue\",         boxToolSize = \"xl\",         \"Some text here!\",         footer = \"The footer here!\"       )     ),     title = \"userBox\"   ),   server = function(input, output) {     observeEvent(input$update_box, {       updateBox(         \"userbox\",         action = \"update\",         options = list(           title = userDescription(             title = \"Jean Box\",             subtitle = \"Developer\",             type = 1,             image = \"https://adminlte.io/themes/AdminLTE/dist/img/user3-128x128.jpg\",           ),           status = \"red\",           background = NULL,           width = 4         )       )     })   } )"},{"path":"/articles/improved-boxes.html","id":"socialbox","dir":"Articles","previous_headings":"Boxes on Steroids! > Other Boxes","what":"socialBox","title":"Improved boxes","text":"socialBox() dedicated contain events, comments, anything related people. title parameter hosts userBlock(): Elements like attachmentBlock() userMessages() good fit component. ... slot may hosts multiple boxComment, consisting user comments. Right now, programmatic way (understand update function available) handle future release shinydashboardPlus obviously fill gap. app shows combination multiple elements socialBox(), well updateBox() feature: Code","code":"userBlock(   image = \"https://adminlte.io/themes/AdminLTE/dist/img/user4-128x128.jpg\",   title = \"Social Box\",   subtitle = \"example-01.05.2018\" ) shinyApp(   ui = dashboardPage(     dashboardHeader(),     dashboardSidebar(),     dashboardBody(       socialBox(         id = \"socialbox\",         title = userBlock(           image = \"https://adminlte.io/themes/AdminLTE/dist/img/user4-128x128.jpg\",           title = \"Social Box\",           subtitle = \"example-01.05.2018\"         ),         actionButton(\"update_box\", \"Refresh\"),         \"Some text here!\",         br(),         tabsetPanel(           tabPanel(             \"News\",             attachmentBlock(               image = \"https://www.sammobile.com/wp-content/uploads/2017/11/Camel.png\",               title = \"Test\",               href = \"https://google.com\",               \"This is the content\"             )           ),           tabPanel(             \"Messages\",             userMessages(               width = 12,               status = \"danger\",               userMessage(                 author = \"Alexander Pierce\",                 date = \"20 Jan 2:00 pm\",                 image = \"https://adminlte.io/themes/AdminLTE/dist/img/user1-128x128.jpg\",                 type = \"received\",                 \"Is this template really for free? That's unbelievable!\"               ),               userMessage(                 author = \"Sarah Bullock\",                 date = \"23 Jan 2:05 pm\",                 image = \"https://adminlte.io/themes/AdminLTE/dist/img/user3-128x128.jpg\",                 type = \"sent\",                 \"You better believe it!\"               )             )           )         ),         lapply(X = 1:10, FUN = function(i) {           boxComment(             image = \"https://adminlte.io/themes/AdminLTE/dist/img/user3-128x128.jpg\",             title = paste(\"Comment\", i),             date = \"01.05.2018\",             paste0(\"The \", i, \"-th comment\")           )         }),         footer = \"The footer here!\"       )     ),     title = \"Social Box\"   ),   server = function(input, output) {     observeEvent(input$update_box, {       updateBox(         \"socialbox\",         action = \"update\",         options = list(           title = userBlock(             image = \"https://adminlte.io/themes/AdminLTE/dist/img/user3-128x128.jpg\",             title = \"Social Box updated\",             subtitle = \"today\"           )         )       )     })   } )"},{"path":"/articles/improved-boxes.html","id":"flipbox","dir":"Articles","previous_headings":"Boxes on Steroids! > Other Boxes","what":"flipBox","title":"Improved boxes","text":"flipBox() simple container based W3C documentation. originally part AdminLTE deserves place shinydashboardPlus. front back container, may help display extra information. sure provide id box may flip. server side, flipBox toggled updateFlipBox. currently 2 events, click hover. Code","code":"shinyApp(   ui = dashboardPage(     dashboardHeader(),     dashboardSidebar(),     dashboardBody(       fluidRow(         column(           width = 6,           uiOutput(\"active_side\"),           actionButton(\"toggle\", \"Toggle flip box\"),           flipBox(             id = \"myflipbox\",             trigger = \"hover\",             width = 12,             front = div(               class = \"text-center\",               h1(\"Flip on hover\"),               img(src = \"https://placehold.co/600x400\")             ),             back = div(               class = \"text-center\",               height = \"300px\",               width = \"100%\",               h1(\"Flip on hover\"),               p(\"More information....\")             )           )         ),         column(           width = 6,           uiOutput(\"active_side_2\"),           flipBox(             id = \"myflipbox2\",             width = 12,             front = div(               class = \"text-center\",               h1(\"Flip on click\"),               img(src = \"https://placehold.co/600x400\")             ),             back = div(               class = \"text-center\",               height = \"300px\",               width = \"100%\",               h1(\"Flip on click\"),               p(\"More information....\")             )           )         )       )     )   ),   server = function(input, output, session) {     output$active_side <- renderUI({       side <- if (input$myflipbox) \"front\" else \"back\"       dashboardBadge(side, color = \"blue\")     })      output$active_side_2 <- renderUI({       side <- if (input$myflipbox2) \"front\" else \"back\"       dashboardBadge(side, color = \"blue\")     })      observeEvent(input$toggle, {       updateFlipBox(\"myflipbox\")     })   } )"},{"path":"/articles/more-skins.html","id":"a-real-time-skin-selector","dir":"Articles","previous_headings":"","what":"A Real Time Skin Selector","title":"Improved Skins","text":"shinydashboardPlus new feature called skinSelector(). JavaScript based widget allowing end user change app skin. According dashboardPage(), 6 unique colors 2 versions, light dark. Note dashboardControlbar() perfect place host skinSelector() since may seen secondary input (app may still work without :)) Code","code":"library(shiny) library(shinydashboard) library(shinydashboardPlus) shinyApp(    ui = dashboardPage(      header = dashboardHeader(),      sidebar = dashboardSidebar(),      body = dashboardBody(),      controlbar = dashboardControlbar(collapsed = FALSE, skinSelector()),      title = \"Skin Selector\"    ),    server = function(input, output) { }  )"},{"path":"/articles/more-skins.html","id":"a-new-dark-skin-midnight","dir":"Articles","previous_headings":"","what":"A New Dark Skin: midnight","title":"Improved Skins","text":"midnight theme powered corresponding Github project. provides plug play dark theme. Code Midnight skin overview fastest option get dark design. ’ll see fresh package able provide similar look feel, much options (effort). Important: feature still !","code":"library(shiny) library(shinydashboard) library(shinydashboardPlus)  shinyApp(    ui = dashboardPage(      skin = \"midnight\",      header = dashboardHeader(),      sidebar = dashboardSidebar(),      body = dashboardBody(        box(          title = \"My box\"        )      ),      controlbar = dashboardControlbar(),      footer = dashboardFooter(),      title = \"Midnight Skin\"    ),    server = function(input, output) { }  )"},{"path":"/articles/more-skins.html","id":"material-design-adminlte","dir":"Articles","previous_headings":"","what":"Material Design + AdminLTE","title":"Improved Skins","text":"activate material design feature, set md TRUE dashboardPage(). feature powered MaterialAdminLTE, built top AdminLTE2 material design Bootstrap 3 ! Code","code":"library(shiny) library(shinydashboard) library(shinydashboardPlus)  shinyApp(    ui = dashboardPage(      md = TRUE,      skin = \"blue\",      header = dashboardHeader(),      sidebar = dashboardSidebar(),      body = dashboardBody(        box(title = \"My box\")      ),      controlbar = dashboardControlbar(),      footer = dashboardFooter(),      title = \"Material design\"    ),    server = function(input, output) { }  )"},{"path":"/articles/more-skins.html","id":"fresh","dir":"Articles","previous_headings":"","what":"Fresh","title":"Improved Skins","text":"{fresh} developed dreamRs team. built top sass, provides solid R API write SASS variables compile CSS. fresh captures AdminLTE2 (well AdminLTE3 Bootstrap 4) SASS variables allow deep customization, hiding compilation burden hood. adminlte_color() provides interface available AdminLTE colors allow overwrite default. strongly suggest avoid setting default green blue, might become confusing. Instead, better play color palettes. Similarly, adminlte_sidebar allows re-style sidebar component. fresh theme based cyberpunk color palettes. Code","code":"library(fresh) # create the theme with a cyberpunk color palette theme <- create_theme(   adminlte_color(     green = \"#3fff2d\",     blue = \"#2635ff\",     red = \" #ff2b2b\",     yellow = \"#feff6e\",     fuchsia = \"#ff5bf8\",     navy = \"#374c92\",     purple = \"#615cbf\",     maroon = \"#b659c9\",     light_blue = \"#5691cc\"   ),   adminlte_sidebar(     dark_bg = \"#D8DEE9\",     dark_hover_bg = \"#81A1C1\",     dark_color = \"#2E3440\"   ),   adminlte_global(     content_bg = \"#aaaaaa\"   ) )  # create tribble for box global config box_config <- tibble::tribble(   ~background, ~labelStatus,   \"red\", \"warning\",   \"purple\", \"success\",   \"green\", \"primary\",   \"yellow\", \"danger\",   \"fuchsia\", \"info\" )  # box factory function box_factory <- function(background, labelStatus) {   box(     title = \"Cyberpunk Box\",      collapsible = TRUE,      background = background,     height = \"200px\",     label = boxLabel(1, labelStatus)   ) }  # pmap magic boxes <- purrr::pmap(box_config, box_factory)  shinyApp(    ui = dashboardPage(      freshTheme = theme,      skin = \"blue\",      options = list(sidebarExpandOnHover = TRUE),      header = dashboardHeader(        dropdownMenu(          type = \"messages\",           badgeStatus = \"success\",          messageItem(            from = \"Support Team\",            message = \"This is the content of a message.\",            time = \"5 mins\"          ),          messageItem(            from = \"Support Team\",            message = \"This is the content of another message.\",            time = \"2 hours\"          )        )      ),      sidebar = dashboardSidebar(        sidebarMenu(          menuItem(\"Item 1\", badgeLabel = icon(\"heart\"), badgeColor = \"light-blue\"),          menuItem(\"Item 2\", badgeLabel = icon(\"poo\"), badgeColor = \"maroon\")        )      ),      body = dashboardBody(boxes),      controlbar = dashboardControlbar(),      title = \"Fresh theming\"    ),    server = function(input, output) { }  )"},{"path":"/articles/shinydashboardPlus.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"shinydashboardPlus","text":"shinydashboardPlus relies basis shinydashboard, AdminLTE HTML template. provides extra elements help develop Shiny apps professional look feel. summary main features. Since 2.0.0 release, shinydashboardPlus overwrites shinydashboard functions dashboardPage() box() facilitate transition one package another.","code":""},{"path":[]},{"path":"/articles/shinydashboardPlus.html","id":"breaking-changes","dir":"Articles","previous_headings":"What changes in v2.0.0 ?","what":"Breaking changes","title":"shinydashboardPlus","text":"v2.0.0 clearly major breaking change shinydashboardPlus. means coming v0.7.5 (latest CRAN version date), rewrite code. easy decision take necessary improve package quality (naming consistency, …). Now transition shinydashboard shinydashboardPlus easier since function parameters harmonized. old rightSidebar() component becomes dashboardControlbar() ease transition shinydashboardPlus bs4Dash, latter Bootstrap 4 version modern look feel.","code":""},{"path":"/articles/shinydashboardPlus.html","id":"more-checks","dir":"Articles","previous_headings":"What changes in v2.0.0 ?","what":"More checks","title":"shinydashboardPlus","text":"hood, functions safer controls done user inputs reduce risk accidentally providing wrong values.","code":""},{"path":"/articles/shinydashboardPlus.html","id":"new-features","dir":"Articles","previous_headings":"What changes in v2.0.0 ?","what":"New features","title":"shinydashboardPlus","text":"exiting features 2.0.0 probably ability leverage awesome fresh package (see details) dashboardPage() freshTheme parameter. Additionally, skinSelector() allows dynamically change dashboard skin client side. also update_ functions programmatically control elements server. Now dashboardSidebar() may collapsed, dashboardControlbar(). dashboardPage() options parameter easy way fine tune AdminLTE behavior (see list available options). box() component reworked reduce number parameters include new sub-components like boxSidebar() may programmatically collapsed, boxLabel(). box() input binding indicating current state server side, perform specific tasks. Finally, colors better documented thanks Victor Perrier dreamRs. instance, primary color shown , danger , eventually helps users choose available options.","code":""},{"path":"/articles/shinydashboardPlus.html","id":"basic-example","dir":"Articles","previous_headings":"","what":"Basic Example","title":"shinydashboardPlus","text":"simple app may build shinydashboardPlus. explicitly configured sidebar expand hover, options parameters. Interestingly, ’ll able notice scroll top button feature scroll bottom (bottom-right corner). Code","code":"library(shiny) library(shinydashboard) library(shinydashboardPlus) shinyApp(    ui = dashboardPage(      options = list(sidebarExpandOnHover = TRUE),      header = dashboardHeader(),      sidebar = dashboardSidebar(minified = TRUE, collapsed = TRUE),      body = dashboardBody(       lapply(1:20, box, width = 12, title = \"box\")      ),      controlbar = dashboardControlbar(),      title = \"DashboardPage\"    ),    server = function(input, output) { }  )"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Granjon. Author, maintainer. RinteRface. Copyright holder. Almasaeed Studio. Contributor, copyright holder.           AdminLTE2 theme Bootstrap 3 Guang Yang. Contributor, copyright holder.           ygdashboard original template Winston Chang. Contributor, copyright holder.           Functions shinydashboard Victor Perrier. Contributor.           improved shinydashboardPlusGallery","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Granjon D (2024). shinydashboardPlus: Add 'AdminLTE2' Components 'shinydashboard'. R package version 2.0.5, https://shinydashboardPlus.rinterface.com/, https://github.com/RinteRface/shinydashboardPlus.","code":"@Manual{,   title = {shinydashboardPlus: Add More 'AdminLTE2' Components to 'shinydashboard'},   author = {David Granjon},   year = {2024},   note = {R package version 2.0.5, https://shinydashboardPlus.rinterface.com/},   url = {https://github.com/RinteRface/shinydashboardPlus}, }"},{"path":"/index.html","id":"shinydashboardplus","dir":"","previous_headings":"","what":"Add More AdminLTE2 Components to shinydashboard","title":"Add More AdminLTE2 Components to shinydashboard","text":"extensions shinydashboard","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Add More AdminLTE2 Components to shinydashboard","text":"Go Get Started","code":"# for the CRAN version install.packages(\"shinydashboardPlus\") # for the latest version devtools::install_github(\"RinteRface/shinydashboardPlus\")"},{"path":"/index.html","id":"motivations","dir":"","previous_headings":"","what":"Motivations","title":"Add More AdminLTE2 Components to shinydashboard","text":"shinydashboardPlus based idea ygdashboard, latter compatible shinydashboard (use shinydashboard ygdashboard time). shinydashboardPlus can still work shinydashboard classic functions enrich dashboard additional functions shinydashboardPlus!","code":""},{"path":"/index.html","id":"demo","dir":"","previous_headings":"","what":"Demo","title":"Add More AdminLTE2 Components to shinydashboard","text":"See demonstration run: example application medicine:","code":"library(shinydashboardPlus) shinydashboardPlusGallery()"},{"path":"/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Add More AdminLTE2 Components to shinydashboard","text":"adminLTE team Victor Perrier Dream’R","code":""},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Add More AdminLTE2 Components to shinydashboard","text":"Please note shinydashboardPlus project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"/reference/accordion.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE2 accordion container — accordion","title":"AdminLTE2 accordion container — accordion","text":"Create accordion container. Accordions part collapsible elements. accordionItem creates accordion item put inside accordion container. updateAccordion toggles accordion client.","code":""},{"path":"/reference/accordion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE2 accordion container — accordion","text":"","code":"accordion(..., id = NULL, width = 12)  accordionItem(..., title, status = NULL, collapsed = TRUE, solidHeader = TRUE)  updateAccordion(id, selected, session = shiny::getDefaultReactiveDomain())"},{"path":"/reference/accordion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE2 accordion container — accordion","text":"... slot accordionItem. id Accordion target. width width accordion. title Optional title. status status item determines item's background   color.  Valid statuses defined follows: primary: #3c8dbc success: #00a65a info: #00c0ef warning: #f39c12 danger: #f56954 navy: #001F3F teal: #39CCCC purple: #605ca8 orange: #ff851b maroon: #D81B60 black: #111111 primary, success, info, warning danger compatible solidHeader! collapsed TRUE, start collapsed. must used collapsible=TRUE. solidHeader header shown solid color background? selected Index newly selected accordionItem. session Shiny session object.","code":""},{"path":"/reference/accordion.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE2 accordion container — accordion","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"/reference/accordion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE2 accordion container — accordion","text":"","code":"if (interactive()) {   library(shiny)   library(shinydashboard)   library(shinydashboardPlus)    shinyApp(     ui = dashboardPage(       dashboardHeader(),       dashboardSidebar(),       dashboardBody(         accordion(           id = \"accordion1\",           accordionItem(             title = \"Accordion 1 Item 1\",             status = \"danger\",             collapsed = TRUE,             \"This is some text!\"           ),           accordionItem(             title = \"Accordion 1 Item 2\",             status = \"warning\",             collapsed = FALSE,             \"This is some text!\"           )         ),         accordion(           id = \"accordion2\",           accordionItem(             title = \"Accordion 2 Item 1\",             status = \"info\",             collapsed = TRUE,             \"This is some text!\"           ),           accordionItem(             title = \"Accordion 2 Item 2\",             status = \"success\",             collapsed = FALSE,             \"This is some text!\"           )         )       ),       title = \"Accordion\"     ),     server = function(input, output) { }   ) }   # Update accordion if (interactive()) {   library(shiny)   library(shinydashboard)   library(shinydashboardPlus)    shinyApp(     ui = dashboardPage(       dashboardHeader(),       dashboardSidebar(),       dashboardBody(         radioButtons(\"controller\", \"Controller\", choices = c(1, 2)),         br(),         accordion(           id = \"accordion1\",           accordionItem(             title = \"Accordion 1 Item 1\",             status = \"danger\",             collapsed = TRUE,             \"This is some text!\"           ),           accordionItem(             title = \"Accordion 1 Item 2\",             status = \"warning\",             collapsed = TRUE,             \"This is some text!\"           )         )       ),       title = \"Update Accordion\"     ),     server = function(input, output, session) {       observeEvent(input$controller, {         updateAccordion(id = \"accordion1\", selected = input$controller)       })       observe(print(input$accordion1))       observeEvent(input$accordion1, {         showNotification(           sprintf(\"You selected accordion N° %s\", input$accordion1),           type = \"message\"         )       })     }   ) }"},{"path":"/reference/appButton.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE2 special large button — appButton","title":"AdminLTE2 special large button — appButton","text":"Create large button ideal web applications identical classic Shiny action button.","code":""},{"path":"/reference/appButton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE2 special large button — appButton","text":"","code":"appButton(..., inputId, label, icon = NULL, width = NULL)"},{"path":"/reference/appButton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE2 special large button — appButton","text":"... Named attributes applied button link. inputId input slot used access value. label contents button link–usually text label, also use HTML, like image. icon optional icon() appear button. width width input, e.g. '400px', '100%'; see validateCssUnit().","code":""},{"path":"/reference/appButton.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE2 special large button — appButton","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"/reference/appButton.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE2 special large button — appButton","text":"","code":"if (interactive()) {  library(shiny)  library(shinydashboard)  library(shinydashboardPlus)    shinyApp(   ui = dashboardPage(     dashboardHeader(),     dashboardSidebar(),     dashboardBody(      box(       title = \"App Buttons\",       status = NULL,       appButton(         inputId = \"myAppButton\",         label = \"Users\",          icon = icon(\"users\"),          dashboardBadge(textOutput(\"btnVal\"), color = \"blue\")       )      )     ),     title = \"App buttons\"   ),   server = function(input, output) {    output$btnVal <- renderText(input$myAppButton)   }  ) }"},{"path":"/reference/attachmentBlock.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE2 attachment container — attachmentBlock","title":"AdminLTE2 attachment container — attachmentBlock","text":"attachmentBlock create attachment container, nice wrap articles... insert box.","code":""},{"path":"/reference/attachmentBlock.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE2 attachment container — attachmentBlock","text":"","code":"attachmentBlock(..., image, title = NULL, href = NULL)"},{"path":"/reference/attachmentBlock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE2 attachment container — attachmentBlock","text":"... element. image url path image. title attachment title. href external link.","code":""},{"path":"/reference/attachmentBlock.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE2 attachment container — attachmentBlock","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"/reference/attachmentBlock.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE2 attachment container — attachmentBlock","text":"","code":"# Box with attachmentBlock if (interactive()) {   library(shiny)   library(shinydashboard)   library(shinydashboardPlus)    shinyApp(     ui = dashboardPage(       dashboardHeader(),       dashboardSidebar(),       dashboardBody(         box(           title = \"Attachment example\",           attachmentBlock(             image = \"https://adminlte.io/themes/AdminLTE/dist/img/photo1.png\",             title = \"Test\",             href = \"https://google.com\",             \"This is the content\"           )         )       ),       title = \"AttachmentBlock\"     ),     server = function(input, output) { }   ) }"},{"path":"/reference/blockQuote.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE2 block quote — blockQuote","title":"AdminLTE2 block quote — blockQuote","text":"want quote text","code":""},{"path":"/reference/blockQuote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE2 block quote — blockQuote","text":"","code":"blockQuote(..., side = \"left\")"},{"path":"/reference/blockQuote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE2 block quote — blockQuote","text":"... element. side blockquote orientation. \"left\" default, can set \"right\".","code":""},{"path":"/reference/blockQuote.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE2 block quote — blockQuote","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"/reference/blockQuote.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE2 block quote — blockQuote","text":"","code":"if (interactive()) {   library(shiny)   library(shinydashboard)   library(shinydashboardPlus)    shinyApp(     ui = dashboardPage(       dashboardHeader(),       dashboardSidebar(),       dashboardBody(         box(           title = \"BlockQuote example\",           blockQuote(\"I quote some text here!\"),           blockQuote(\"I quote some text here!\", side = \"right\")         )       ),       title = \"blockQuote\"     ),     server = function(input, output) { }   ) }"},{"path":"/reference/box.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a box for the main body of a dashboard — box","title":"Create a box for the main body of a dashboard — box","text":"box can used hold content main body dashboard. updateBox used toggle, close restore box client. boxDropdown used dropdown parameter box. boxDropdownItem goes boxDropdown. dropdownDivider goes boxDropdown also dropdown menu container. boxPad creates vertical container descriptionBlock. included box. descriptionBlock creates description block, perfect writing statistics insert box","code":""},{"path":"/reference/box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a box for the main body of a dashboard — box","text":"","code":"box(   ...,   title = NULL,   footer = NULL,   status = NULL,   solidHeader = FALSE,   background = NULL,   width = 6,   height = NULL,   collapsible = FALSE,   collapsed = FALSE,   closable = FALSE,   icon = NULL,   gradient = FALSE,   boxToolSize = \"sm\",   headerBorder = TRUE,   label = NULL,   dropdownMenu = NULL,   sidebar = NULL,   id = NULL )  updateBox(   id,   action = c(\"remove\", \"toggle\", \"restore\", \"update\"),   options = NULL,   session = shiny::getDefaultReactiveDomain() )  boxDropdown(..., icon = shiny::icon(\"wrench\"))  boxDropdownItem(..., id = NULL, href = NULL, icon = NULL)  dropdownDivider()  boxPad(..., color = NULL, style = NULL)  descriptionBlock(   number = NULL,   numberColor = NULL,   numberIcon = NULL,   header = NULL,   text = NULL,   rightBorder = TRUE,   marginBottom = FALSE )"},{"path":"/reference/box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a box for the main body of a dashboard — box","text":"... element descriptionBlock. title Optional title. footer Optional footer text. status status item determines item's background   color.  Valid statuses defined follows: primary: #3c8dbc success: #00a65a info: #00c0ef warning: #f39c12 danger: #f56954 navy: #001F3F teal: #39CCCC purple: #605ca8 orange: #ff851b maroon: #D81B60 black: #111111 primary, success, info, warning danger compatible solidHeader! solidHeader header shown solid color background? background NULL (default), background box   white. Otherwise, color string. Valid colors listed   validColors. See : light-blue (primary status): #3c8dbc . red (danger status): #dd4b39 . green (success status): #00a65a . aqua (info status): #00c0ef . yellow (warning status): #f39c12 . blue: #0073b7 . navy: #001F3F . teal: #39CCCC . olive: #3D9970 . lime: #01FF70 . orange: #FF851B . fuchsia: #F012BE . purple: #605ca8 . maroon: #D81B60 . black: #111 . gray: #d2d6de . width width box, using Bootstrap grid system. used row-based layouts. overall width region 12, default valueBox width 4 occupies 1/3 width. column-based layouts, use NULL width; width set column contains box. height height box, pixels CSS unit. default height scales automatically content. collapsible TRUE, display button upper right allows user collapse box. collapsed TRUE, start collapsed. must used collapsible=TRUE. closable TRUE, display button upper right allows user close box. icon Optional icon. Expect icon. gradient Whether allow gradient effect background color. Default FALSE. boxToolSize Size toolbox: choose among \"xs\", \"sm\", \"md\", \"lg\". headerBorder Whether display border header body. TRUE default. label Slot boxLabel. dropdownMenu List items boxtool dropdown menu. Use boxDropdown. sidebar Slot boxSidebar. id passed, item behave like action button. action Action trigger: either collapse, remove, restore update. options action update, list new options configure box, list(title = \"new title\", status = NULL, solidHeader = FALSE, background = \"red\", width = 6, height = \"200px\", collapsible = FALSE, closable = FALSE). box background/status (item may NULL), must explicitly pass background = NULL, want remove background value. session Shiny session object. href Target url page. color background color: see list valid colors https://adminlte.io/themes/AdminLTE/pages/UI/general.html. See : light-blue (primary status): #3c8dbc . red (danger status): #dd4b39 . green (success status): #00a65a . aqua (info status): #00c0ef . yellow (warning status): #f39c12 . blue: #0073b7 . navy: #001F3F . teal: #39CCCC . olive: #3D9970 . lime: #01FF70 . orange: #FF851B . fuchsia: #F012BE . purple: #605ca8 . maroon: #D81B60 . black: #111 . gray: #d2d6de . style custom CSS, . number number. numberColor number color: see list valid colors https://adminlte.io/themes/AdminLTE/pages/UI/general.html. See : light-blue (primary status): #3c8dbc . red (danger status): #dd4b39 . green (success status): #00a65a . aqua (info status): #00c0ef . yellow (warning status): #f39c12 . blue: #0073b7 . navy: #001F3F . teal: #39CCCC . olive: #3D9970 . lime: #01FF70 . orange: #FF851B . fuchsia: #F012BE . purple: #605ca8 . maroon: #D81B60 . black: #111 . gray: #d2d6de . numberIcon number icon, . Expect icon. header bold text. text additional text. rightBorder TRUE default. Whether display right border separate two blocks. last block right right border. marginBottom FALSE default. Set TRUE descriptionBlock used boxPad context.","code":""},{"path":"/reference/box.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a box for the main body of a dashboard — box","text":"","code":"# A box with label, sidebar, dropdown menu if (interactive()) {  library(shiny)  library(shinydashboard)  library(shinydashboardPlus)   shinyApp(    ui = dashboardPage(      dashboardHeader(),      dashboardSidebar(),      dashboardBody(       box(         title = \"Closable Box with dropdown\",          closable = TRUE,          width = 12,         status = \"warning\",          solidHeader = FALSE,          collapsible = TRUE,         label = boxLabel(          text = 1,          status = \"danger\",          style = \"circle\"         ),         dropdownMenu = boxDropdown(          boxDropdownItem(\"Link to google\", href = \"https://www.google.com\"),          boxDropdownItem(\"item 2\", href = \"#\"),          dropdownDivider(),          boxDropdownItem(\"item 3\", href = \"#\", icon = icon(\"table-cells\"))         ),         sidebar = boxSidebar(          startOpen = TRUE,          id = \"mycardsidebar\",          sliderInput(           \"obs\",            \"Number of observations:\",           min = 0,            max = 1000,            value = 500          )         ),         plotOutput(\"distPlot\")        )      )    ),    server = function(input, output) {     output$distPlot <- renderPlot({      hist(rnorm(input$obs))     })    }  ) }  # Toggle a box on the client if (interactive()) {  library(shiny)  library(shinydashboard)  library(shinydashboardPlus)    ui <- dashboardPage(    dashboardHeader(),    dashboardSidebar(),    dashboardBody(      tags$style(\"body { background-color: ghostwhite}\"),      fluidRow(        actionButton(\"toggle_box\", \"Toggle Box\"),        actionButton(\"remove_box\", \"Remove Box\", class = \"bg-danger\"),        actionButton(\"restore_box\", \"Restore Box\", class = \"bg-success\")      ),      actionButton(\"update_box\", \"Update Box\", class = \"bg-info\"),       actionButton(\"update_box2\", \"Update Box 2\", class = \"bg-info\"),      br(),      br(),      box(        title = textOutput(\"box_state\"),        id = \"mybox\",        status = \"danger\",         background = \"maroon\",         gradient = TRUE,        collapsible = TRUE,        closable = TRUE,        plotOutput(\"plot\")      )    )  )    server <- function(input, output, session) {    output$plot <- renderPlot({      req(!input$mybox$collapsed)      plot(rnorm(200))    })        output$box_state <- renderText({      state <- if (input$mybox$collapsed) \"collapsed\" else \"uncollapsed\"      paste(\"My box is\", state)    })        observeEvent(input$toggle_box, {      updateBox(\"mybox\", action = \"toggle\")    })        observeEvent(input$remove_box, {      updateBox(\"mybox\", action = \"remove\")    })        observeEvent(input$restore_box, {      updateBox(\"mybox\", action = \"restore\")    })        observeEvent(input$mybox$visible, {      collapsed <- if (input$mybox$collapsed) \"collapsed\" else \"uncollapsed\"      visible <- if (input$mybox$visible) \"visible\" else \"hidden\"      message <- paste(\"My box is\", collapsed, \"and\", visible)      showNotification(message, type = \"warning\", duration = 1)    })        observeEvent(input$update_box, {      updateBox(        \"mybox\",         action = \"update\",         options = list(          title = h2(\"hello\", dashboardLabel(1, status = \"primary\")),          status = \"warning\",           solidHeader = TRUE,           width = 12,           background = NULL,           height = \"900px\",           closable = FALSE        )      )    })          observeEvent(input$update_box2, {       updateBox(         \"mybox\",          action = \"update\",          options = list(           status = NULL,            solidHeader = FALSE,           width = 4,            background = \"green\",            height = \"500px\",            closable = TRUE         )       )     })      }    shinyApp(ui, server) }  # Box with dropdown items and input if (interactive()) {  library(shiny)  library(shinydashboard)  library(shinydashboardPlus)    shinyApp(    ui = dashboardPage(      dashboardHeader(),      dashboardSidebar(),      dashboardBody(        box(          title = \"Closable Box with dropdown\",           closable = TRUE,           width = 12,          status = \"warning\",           solidHeader = FALSE,           collapsible = TRUE,          dropdownMenu = boxDropdown(            boxDropdownItem(\"Click me\", id = \"dropdownItem\", icon = icon(\"heart\")),            boxDropdownItem(\"item 2\", href = \"https://www.google.com/\"),            dropdownDivider(),            boxDropdownItem(\"item 3\", icon = icon(\"table-cells\"))          ),          \"My box\"        )      )    ),    server = function(input, output) {      observeEvent(input$dropdownItem, {        showNotification(\"Hello\", duration = 1, type = \"message\")      })    }  ) }  # Box with boxPad container + descriptionBlock if (interactive()) {   library(shiny)   library(shinydashboard)   library(shinydashboardPlus)    shinyApp(     ui = dashboardPage(       dashboardHeader(),       dashboardSidebar(),       dashboardBody(         box(           title = \"Box with right pad\",           status = \"warning\",           fluidRow(             column(width = 6),             column(               width = 6,               boxPad(                 color = \"green\",                 descriptionBlock(                   header = \"8390\",                   text = \"VISITS\",                   rightBorder = FALSE,                   marginBottom = TRUE                 ),                 descriptionBlock(                   header = \"30%\",                   text = \"REFERRALS\",                   rightBorder = FALSE,                   marginBottom = TRUE                 ),                 descriptionBlock(                   header = \"70%\",                   text = \"ORGANIC\",                   rightBorder = FALSE,                   marginBottom = FALSE                 )               )             )           )         )       ),       title = \"boxPad\"     ),     server = function(input, output) { }   ) }   # Box with descriptionBlock if (interactive()) {   library(shiny)   library(shinydashboard)   library(shinydashboardPlus)    shinyApp(     ui = dashboardPage(       dashboardHeader(),       dashboardSidebar(),       dashboardBody(         box(           solidHeader = FALSE,           title = \"Status summary\",           background = NULL,           width = 4,           status = \"danger\",           footer = fluidRow(             column(               width = 6,               descriptionBlock(                 number = \"17%\",                 numberColor = \"green\",                 numberIcon = icon(\"caret-up\"),                 header = \"$35,210.43\",                 text = \"TOTAL REVENUE\",                 rightBorder = TRUE,                 marginBottom = FALSE               )             ),             column(               width = 6,               descriptionBlock(                 number = \"18%\",                 numberColor = \"red\",                 numberIcon = icon(\"caret-down\"),                 header = \"1200\",                 text = \"GOAL COMPLETION\",                 rightBorder = FALSE,                 marginBottom = FALSE               )             )           )         )       ),       title = \"Description Blocks\"     ),     server = function(input, output) { }   ) }"},{"path":"/reference/boxLabel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a label for box — boxLabel","title":"Create a label for box — boxLabel","text":"boxLabel inserted label slot box.","code":""},{"path":"/reference/boxLabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a label for box — boxLabel","text":"","code":"boxLabel(text, status, style = \"default\")"},{"path":"/reference/boxLabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a label for box — boxLabel","text":"text Label text. practice letters number. status label color status. See https://adminlte.io/themes/AdminLTE/pages/UI/general.html. Valid statuses defined follows: primary: #3c8dbc success: #00a65a info: #00c0ef warning: #f39c12 danger: #f56954 style label border style: \"default\" (rounded angles), \"circle\" \"square\".","code":""},{"path":"/reference/boxProfile.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE2 box profile — boxProfile","title":"AdminLTE2 box profile — boxProfile","text":"boxProfile goes inside box. Displays user information elegant container. boxProfileItem sub-element boxProfile.","code":""},{"path":"/reference/boxProfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE2 box profile — boxProfile","text":"","code":"boxProfile(..., image = NULL, title, subtitle = NULL, bordered = FALSE)  boxProfileItem(title, description)"},{"path":"/reference/boxProfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE2 box profile — boxProfile","text":"... element boxProfileItem. image profile image, . title item title. subtitle subtitle. bordered Whether container border . FALSE default. description item info.","code":""},{"path":"/reference/boxProfile.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE2 box profile — boxProfile","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"/reference/boxProfile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE2 box profile — boxProfile","text":"","code":"# Box with boxProfile if (interactive()) {  library(shiny)  library(shinydashboard)  library(shinydashboardPlus)    shinyApp(   ui = dashboardPage(     dashboardHeader(),     dashboardSidebar(),     dashboardBody(      box(       title = \"Box with profile\",       status = \"primary\",       boxProfile(        image = \"https://adminlte.io/themes/AdminLTE/dist/img/user4-128x128.jpg\",        title = \"Nina Mcintire\",        subtitle = \"Software Engineer\",        bordered = TRUE,        boxProfileItem(         title = \"Followers\",         description = 1322        ),        boxProfileItem(         title = \"Following\",         description = 543        ),        boxProfileItem(         title = \"Friends\",         description = 13287        )       )      )     ),     title = \"boxProfile\"   ),   server = function(input, output) { }  ) }"},{"path":"/reference/boxSidebar.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a sidebar for a box — boxSidebar","title":"Create a sidebar for a box — boxSidebar","text":"boxSidebar inserted sidebar slot box. updateBoxSidebar toggle boxSidebar client.","code":""},{"path":"/reference/boxSidebar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a sidebar for a box — boxSidebar","text":"","code":"boxSidebar(   ...,   id = NULL,   width = 50,   background = \"#333a40\",   startOpen = FALSE,   icon = shiny::icon(\"gears\") )  updateBoxSidebar(id, session = shiny::getDefaultReactiveDomain())"},{"path":"/reference/boxSidebar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a sidebar for a box — boxSidebar","text":"... Sidebar content. id Sidebar id. width Sidebar opening width percentage. 50% default, means card sidebar take 50 numeric value 25 100. background Sidebar background color. Dark default. Expect HEX code. startOpen Whether sidebar open start. FALSE default. icon Sidebar icon. Expect icon. session Shiny session object.","code":""},{"path":"/reference/boxSidebar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a sidebar for a box — boxSidebar","text":"","code":"# Toggle a box sidebar if (interactive()) {  library(shiny)  library(shinydashboard)  library(shinydashboardPlus)    shinyApp(   ui = dashboardPage(     header = dashboardHeader(),     body = dashboardBody(       box(         title = \"Update box sidebar\",          closable = TRUE,          width = 12,         height = \"500px\",         solidHeader = FALSE,          collapsible = TRUE,         actionButton(\"update\", \"Toggle card sidebar\"),         sidebar = boxSidebar(           id = \"mycardsidebar\",           p(\"Sidebar Content\")         )       )     ),     sidebar = dashboardSidebar()   ),   server = function(input, output, session) {     observe(print(input$mycardsidebar))          observeEvent(input$update, {       updateBoxSidebar(\"mycardsidebar\")     })        }  ) }"},{"path":"/reference/carousel.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE2 carousel container — carousel","title":"AdminLTE2 carousel container — carousel","text":"carousel creates carousel container display media content. carouselItem creates carousel item insert carousel.","code":""},{"path":"/reference/carousel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE2 carousel container — carousel","text":"","code":"carousel(..., id, indicators = TRUE, width = 6, .list = NULL)  carouselItem(..., caption = NULL, active = FALSE)"},{"path":"/reference/carousel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE2 carousel container — carousel","text":"... Element images, iframe, ... id Carousel id. Must unique. indicators Whether display left right indicators. width Carousel width. 6 default. .list need pass carouselItem via lapply similar, put item instead passing ... caption Item caption. active Whether item active start.","code":""},{"path":"/reference/carousel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE2 carousel container — carousel","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"/reference/carousel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE2 carousel container — carousel","text":"","code":"if (interactive()) {   library(shiny)   library(shinydashboard)   library(shinydashboardPlus)    shinyApp(     ui = dashboardPage(       header = dashboardHeader(),       sidebar = dashboardSidebar(),       body = dashboardBody(         carousel(           id = \"mycarousel\",           carouselItem(             caption = \"Item 1\",             tags$img(src = \"https://placehold.it/900x500/3c8dbc/ffffff&text=I+Love+Bootstrap\")           ),           carouselItem(             caption = \"Item 2\",             tags$img(src = \"https://placehold.it/900x500/39CCCC/ffffff&text=I+Love+Bootstrap\")           )         )       ),       title = \"Carousel\"     ),     server = function(input, output) { }   ) }"},{"path":"/reference/controlbar.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE2 dashboard right sidebar — dashboardControlbar","title":"AdminLTE2 dashboard right sidebar — dashboardControlbar","text":"dashboardControlbar create right sidebar container. updateControlbar allows toggle dashboardControlbar. controlbarMenu tabset panel dashboardControlbar. controlbarItem tabPanel controlbarMenu. updateControlbarMenu allows programmatically change currently selected controlbarItem client.","code":""},{"path":"/reference/controlbar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE2 dashboard right sidebar — dashboardControlbar","text":"","code":"dashboardControlbar(   ...,   id = NULL,   disable = FALSE,   width = 230,   collapsed = TRUE,   overlay = TRUE,   skin = \"dark\",   .list = NULL )  updateControlbar(id, session = shiny::getDefaultReactiveDomain())  controlbarMenu(..., id = NULL, selected = NULL)  controlbarItem(title, ..., value = title, icon = NULL)  updateControlbarMenu(   id,   selected = NULL,   session = shiny::getDefaultReactiveDomain() )"},{"path":"/reference/controlbar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE2 dashboard right sidebar — dashboardControlbar","text":"... slot controlbarMenu. compatible .items. id Controlbar id. disable TRUE, sidebar disabled. width Sidebar width pixels. Numeric value expected. 230 default. collapsed Whether control bar right side collapsed start. TRUE default. overlay Whether sidebar covers content expanded. Default TRUE. skin background color: \"dark\" \"light\". .list Pass element want embed panels. compatible ... session Shiny session object. selected Item select. title Display title tab value value sent tabsetPanel reports tab selected. omitted tabsetPanel id, title used. icon Optional icon appear tab. attribute valid using tabPanel within navbarPage().","code":""},{"path":"/reference/controlbar.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"AdminLTE2 dashboard right sidebar — dashboardControlbar","text":"maximum 5 controlbarItem! AdminLTE 2 support panels.","code":""},{"path":"/reference/controlbar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE2 dashboard right sidebar — dashboardControlbar","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"/reference/controlbar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE2 dashboard right sidebar — dashboardControlbar","text":"","code":"# Controlbar example if (interactive()) {  library(shiny)  library(shinydashboard)  library(shinydashboardPlus)  shinyApp(    ui = dashboardPage(      header = dashboardHeader(),      sidebar = dashboardSidebar(),      body = dashboardBody(),      controlbar = dashboardControlbar(       skin = \"dark\",       controlbarMenu(        id = \"menu\",        controlbarItem(         \"Tab 1\",         \"Welcome to tab 1\"        ),        controlbarItem(         \"Tab 2\",         \"Welcome to tab 2\"        )       )      ),      title = \"Right Sidebar\"    ),    server = function(input, output) { }  ) }  # Toggle the dashboard controlbar if (interactive()) {  library(shiny)  library(shinydashboard)  library(shinydashboardPlus)    shinyApp(    ui = dashboardPage(      header = dashboardHeader(),      sidebar = dashboardSidebar(),      body = dashboardBody(        actionButton(inputId = \"controlbarToggle\", label = \"Toggle Controlbar\")      ),      controlbar = dashboardControlbar(id = \"controlbar\")    ),    server = function(input, output, session) {            observeEvent(input$controlbar, {        if (input$controlbar) {          showModal(modalDialog(            title = \"Alert\",            \"The controlbar is opened.\",            easyClose = TRUE,            footer = NULL          ))        }      })            observeEvent(input$controlbarToggle, {        updateControlbar(\"controlbar\")      })            observe({        print(input$controlbar)      })    }  ) }  # controlbar with controlbarMenu if (interactive()) {  library(shiny)  library(shinydashboard)  library(shinydashboardPlus)    shinyApp(    ui = dashboardPage(      header = dashboardHeader(),      sidebar = dashboardSidebar(),      body = dashboardBody(),      controlbar = dashboardControlbar(       id = \"controlbar\",       controlbarMenu(        id = \"menu\",        controlbarItem(         \"Tab 1\",         \"Welcome to tab 1\"        ),        controlbarItem(         \"Tab 2\",         \"Welcome to tab 2\"        )       )      )    ),    server = function(input, output, session) {            observeEvent(input$menu, {        showModal(modalDialog(          title = \"Alert\",          sprintf(\" %s is active\", input$menu),          easyClose = TRUE,          footer = NULL        ))      })    }  ) }  # Update a controlbar menu if (interactive()) {  library(shiny)  library(shinydashboard)  library(shinydashboardPlus)    shinyApp(    ui = dashboardPage(      header = dashboardHeader(),      sidebar = dashboardSidebar(),      body = dashboardBody(       radioButtons(\"controller\", \"Controller\", choices = c(1, 2, 3))      ),      controlbar = dashboardControlbar(       id = \"controlbar\",       controlbarMenu(        id = \"menu\",        controlbarItem(          paste0(\"Tab\", 1),          paste(\"Welcome to tab\", 1)        ),        controlbarItem(          paste0(\"Tab\", 2),          paste(\"Welcome to tab\", 2)        ),        controlbarItem(          paste0(\"Tab\", 3),          paste(\"Welcome to tab\", 3)        )       )      )    ),    server = function(input, output, session) {     observeEvent(input$controller, {      updateControlbarMenu(       \"menu\",        selected = paste0(\"Tab\", input$controller)      )     })    }  ) }"},{"path":"/reference/dashboardBadge.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE2 badge — dashboardBadge","title":"AdminLTE2 badge — dashboardBadge","text":"Create badge. may inserted element like inside actionButton dashboardSidebar.","code":""},{"path":"/reference/dashboardBadge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE2 badge — dashboardBadge","text":"","code":"dashboardBadge(..., color)"},{"path":"/reference/dashboardBadge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE2 badge — dashboardBadge","text":"... html text element. color label color. See : light-blue (primary status): #3c8dbc . red (danger status): #dd4b39 . green (success status): #00a65a . aqua (info status): #00c0ef . yellow (warning status): #f39c12 . blue: #0073b7 . navy: #001F3F . teal: #39CCCC . olive: #3D9970 . lime: #01FF70 . orange: #FF851B . fuchsia: #F012BE . purple: #605ca8 . maroon: #D81B60 . black: #111 . gray: #d2d6de .","code":""},{"path":"/reference/dashboardBadge.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE2 badge — dashboardBadge","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"/reference/dashboardBadge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE2 badge — dashboardBadge","text":"","code":"if (interactive()) {   library(shiny)   library(shinydashboard)   library(shinydashboardPlus)    shinyApp(     ui = dashboardPage(       dashboardHeader(),       dashboardSidebar(),       dashboardBody(         dashboardBadge(\"Badge 1\", color = \"blue\"),         actionButton(           inputId = \"badge\",           label = \"Hello\",           icon = NULL,           width = NULL,           dashboardBadge(1, color = \"orange\")         )       )     ),     server = function(input, output) { }   ) }"},{"path":"/reference/dashboardFooter.html","id":null,"dir":"Reference","previous_headings":"","what":"Dashboard Footer — dashboardFooter","title":"Dashboard Footer — dashboardFooter","text":"creates dashboard footer","code":""},{"path":"/reference/dashboardFooter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dashboard Footer — dashboardFooter","text":"","code":"dashboardFooter(left = NULL, right = NULL)"},{"path":"/reference/dashboardFooter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dashboard Footer — dashboardFooter","text":"left Left text. right Right text.","code":""},{"path":"/reference/dashboardFooter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dashboard Footer — dashboardFooter","text":"","code":"if (interactive()) { library(shiny) library(shinydashboard) library(shinydashboardPlus)  shinyApp(   ui = dashboardPage(     header = dashboardHeader(),     sidebar = dashboardSidebar(),     body = dashboardBody(),     footer = dashboardFooter(      left = \"By Divad Nojnarg\",      right = \"Zurich, 2019\"     ),     title = \"DashboardPage\"   ),   server = function(input, output) { } ) }"},{"path":"/reference/dashboardHeader.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a header for a dashboard page — dashboardHeader","title":"Create a header for a dashboard page — dashboardHeader","text":"dashboard header can left blank, can include dropdown menu items right side.","code":""},{"path":"/reference/dashboardHeader.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a header for a dashboard page — dashboardHeader","text":"","code":"dashboardHeader(   ...,   title = NULL,   titleWidth = NULL,   disable = FALSE,   .list = NULL,   leftUi = NULL,   controlbarIcon = shiny::icon(\"gears\"),   fixed = FALSE )"},{"path":"/reference/dashboardHeader.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a header for a dashboard page — dashboardHeader","text":"... Items put header. dropdownMenus. title optional title show header bar.. default, also used title shown browser's title bar. want different text dashboard header bar, set title dashboardPage. titleWidth width title area. must either number specifies width pixels, string specifies width CSS units. disable TRUE, display header bar. .list optional list containing items put header. ... arguments, list format. can useful working programmatically generated items. leftUi Items appear left part navbar. wrapped tagList. controlbarIcon Customize trigger icon right sidebar. fixed Whether navbar fixed-top . FALSE default.","code":""},{"path":"/reference/dashboardHeader.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a header for a dashboard page — dashboardHeader","text":"recommend insert shiny input elements (sliderInput) left menu, since well displayed. Instead, wrap  dropdownBlock","code":""},{"path":[]},{"path":"/reference/dashboardHeader.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a header for a dashboard page — dashboardHeader","text":"","code":"if (interactive()) {   library(shiny)   library(shinyWidgets)   library(shinydashboard)   library(shinydashboardPlus)    shinyApp(     ui = dashboardPage(       header = dashboardHeader(         leftUi = tagList(           dropdownBlock(             id = \"mydropdown\",             title = \"Dropdown 1\",             icon = icon(\"sliders\"),             sliderInput(               inputId = \"n\",               label = \"Number of observations\",               min = 10, max = 100, value = 30             ),             prettyToggle(               inputId = \"na\",               label_on = \"NAs kept\",               label_off = \"NAs removed\",               icon_on = icon(\"check\"),               icon_off = icon(\"trash-can\")             )           ),           dropdownBlock(             id = \"mydropdown2\",             title = \"Dropdown 2\",             icon = icon(\"sliders\"),             prettySwitch(               inputId = \"switch4\",               label = \"Fill switch with status:\",               fill = TRUE,               status = \"primary\"             ),             prettyCheckboxGroup(               inputId = \"checkgroup2\",               label = \"Click me!\",               thick = TRUE,               choices = c(\"Click me !\", \"Me !\", \"Or me !\"),               animation = \"pulse\",               status = \"info\"             )           )         ),         dropdownMenu(           type = \"tasks\",           badgeStatus = \"danger\",           taskItem(value = 20, color = \"aqua\", \"Refactor code\"),           taskItem(value = 40, color = \"green\", \"Design new layout\"),           taskItem(value = 60, color = \"yellow\", \"Another task\"),           taskItem(value = 80, color = \"red\", \"Write documentation\")         )       ),       sidebar = dashboardSidebar(),       body = dashboardBody(         setShadow(class = \"dropdown-menu\")       ),       title = \"DashboardPage\"     ),     server = function(input, output) { }   ) }"},{"path":"/reference/dashboardLabel.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE2 label — dashboardLabel","title":"AdminLTE2 label — dashboardLabel","text":"Create label","code":""},{"path":"/reference/dashboardLabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE2 label — dashboardLabel","text":"","code":"dashboardLabel(..., status, style = \"default\")"},{"path":"/reference/dashboardLabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE2 label — dashboardLabel","text":"... text. status label status. Valid statuses defined follows: primary: #3c8dbc success: #00a65a info: #00c0ef warning: #f39c12 danger: #f56954 style label border style: \"default\" (rounded angles), \"circle\" \"square\".","code":""},{"path":"/reference/dashboardLabel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE2 label — dashboardLabel","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"/reference/dashboardLabel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE2 label — dashboardLabel","text":"","code":"if (interactive()) {   library(shiny)   library(shinydashboard)   library(shinydashboardPlus)    shinyApp(     ui = dashboardPage(       dashboardHeader(),       dashboardSidebar(),       dashboardBody(         dashboardLabel(\"Label 1\", status = \"info\"),         dashboardLabel(\"Label 2\", status = \"danger\", style = \"circle\"),         dashboardLabel(\"Label 3\", status = \"success\", style = \"square\")       )     ),     server = function(input, output) { }   ) }"},{"path":"/reference/dashboardPage.html","id":null,"dir":"Reference","previous_headings":"","what":"Dashboard Page with a right sidebar — dashboardPage","title":"Dashboard Page with a right sidebar — dashboardPage","text":"creates dashboard page use Shiny app.","code":""},{"path":"/reference/dashboardPage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dashboard Page with a right sidebar — dashboardPage","text":"","code":"dashboardPage(   header,   sidebar,   body,   controlbar = NULL,   footer = NULL,   title = NULL,   skin = c(\"blue\", \"blue-light\", \"black\", \"black-light\", \"purple\", \"purple-light\",     \"green\", \"green-light\", \"red\", \"red-light\", \"yellow\", \"yellow-light\", \"midnight\"),   freshTheme = NULL,   preloader = NULL,   md = FALSE,   options = NULL,   scrollToTop = FALSE )"},{"path":"/reference/dashboardPage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dashboard Page with a right sidebar — dashboardPage","text":"header header created dashboardHeader. sidebar sidebar created dashboardSidebar. body body created dashboardBody. controlbar right sidebar created dashboardControlbar. NULL default. footer footer created dashboardFooter. title title display browser's title bar. value provided, try extract title dashboardHeaderPlus. skin color theme. See https://adminlte.io/themes/AdminLTE/pages/UI/general.html. skin light, sidebar light background. compatible freshTheme. freshTheme skin powered fresh package. compatible skin. See https://dreamrs.github.io/fresh/articles/vars-shinydashboard.html. preloader shinydashboardPlus uses waiter (see https://waiter.john-coene.com/#/). Pass list like list(html = spin_1(), color = \"#333e48\"). waiter expects provide sub-list configure waiterShowOnLoad (refer package help styles). duration defines loader timeout. md Whether enable material design. Experimental... options Extra option overwrite vanilla AdminLTE configuration. See https://adminlte.io/themes/AdminLTE/documentation/index.html#adminlte-options. Expect list. scrollToTop Whether display scroll top button whenever page height large. Default FALSE.","code":""},{"path":[]},{"path":"/reference/dashboardPage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dashboard Page with a right sidebar — dashboardPage","text":"","code":"if (interactive()) {  library(shiny)  library(shinydashboard)  library(shinydashboardPlus)  library(fresh)    shinyApp(    ui = dashboardPage(      freshTheme = create_theme(       adminlte_color(         light_blue = \"#55e7ff\",         blue = \"#2011a2\",         navy = \"#201148\",         red = \"#ff34b3\"       ),       adminlte_sidebar(         dark_bg = \"#D8DEE9\",         dark_hover_bg = \"#81A1C1\",         dark_color = \"#2E3440\"       ),       adminlte_global(         content_bg = \"#FFF\",         box_bg = \"#D8DEE9\",          info_box_bg = \"#D8DEE9\"       )      ),      options = list(sidebarExpandOnHover = TRUE),      header = dashboardHeader(),      sidebar = dashboardSidebar(),      body = dashboardBody(       box(background = \"red\"),       box(background = \"blue\"),       box(background = \"navy\")      ),      controlbar = dashboardControlbar(),      title = \"DashboardPage\"    ),    server = function(input, output) { }  ) }"},{"path":"/reference/dashboardUser.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dashboard user profile. — dashboardUser","title":"Create a dashboard user profile. — dashboardUser","text":"Create dashboard user profile.","code":""},{"path":"/reference/dashboardUser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dashboard user profile. — dashboardUser","text":"","code":"dashboardUser(   ...,   name = NULL,   image = NULL,   title = NULL,   subtitle = NULL,   footer = NULL )"},{"path":"/reference/dashboardUser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dashboard user profile. — dashboardUser","text":"... Body content. Slot dashboardUserItem. name User name. image User profile picture. title title. subtitle subtitle. footer Footer .","code":""},{"path":[]},{"path":"/reference/dashboardUser.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a dashboard user profile. — dashboardUser","text":"","code":"if (interactive()) {   library(shiny)   library(shinyWidgets)   library(shinydashboard)   library(shinydashboardPlus)    shinyApp(     ui = dashboardPage(       header = dashboardHeader(userOutput(\"user\")),       sidebar = dashboardSidebar(),       body = dashboardBody(),       title = \"DashboardPage\"     ),     server = function(input, output) {       output$user <- renderUser({         dashboardUser(           name = \"Divad Nojnarg\",           image = \"https://adminlte.io/themes/AdminLTE/dist/img/user2-160x160.jpg\",           title = \"shinydashboardPlus\",           subtitle = \"Author\",           footer = p(\"The footer\", class = \"text-center\"),           fluidRow(             dashboardUserItem(               width = 6,               socialButton(                 href = \"https://dropbox.com\",                 icon = icon(\"dropbox\")               )             ),             dashboardUserItem(               width = 6,               socialButton(                 href = \"https://github.com\",                 icon = icon(\"github\")               )             )           )         )       })     }   ) }"},{"path":"/reference/dashboardUserItem.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dashboard user profile item — dashboardUserItem","title":"Create a dashboard user profile item — dashboardUserItem","text":"can inserted dashboardUser.","code":""},{"path":"/reference/dashboardUserItem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dashboard user profile item — dashboardUserItem","text":"","code":"dashboardUserItem(item, width)"},{"path":"/reference/dashboardUserItem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dashboard user profile item — dashboardUserItem","text":"item HTML Tag. width Item width 1 12.","code":""},{"path":"/reference/dropdownBlock.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dropdown block to place in a dashboard header — dropdownBlock","title":"Create a dropdown block to place in a dashboard header — dropdownBlock","text":"Create dropdown block place dashboard header","code":""},{"path":"/reference/dropdownBlock.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dropdown block to place in a dashboard header — dropdownBlock","text":"","code":"dropdownBlock(..., id, icon = NULL, title = NULL, badgeStatus = \"danger\")"},{"path":"/reference/dropdownBlock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dropdown block to place in a dashboard header — dropdownBlock","text":"... Items put menu. id Dropdown block id. icon icon display header. Expect icon. title Dropdown block title. badgeStatus Dropdown badge status.","code":""},{"path":[]},{"path":"/reference/flipbox.html","id":null,"dir":"Reference","previous_headings":"","what":"A flipBox based on the W3C example — flipBox","title":"A flipBox based on the W3C example — flipBox","text":"flipBox creates box flips back front inversely updateFlipBox programmatically toggles flipBox server.","code":""},{"path":"/reference/flipbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A flipBox based on the W3C example — flipBox","text":"","code":"flipBox(id, front, back, trigger = c(\"click\", \"hover\"), width = 6)  updateFlipBox(id, session = shiny::getDefaultReactiveDomain())"},{"path":"/reference/flipbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A flipBox based on the W3C example — flipBox","text":"id flipBox id. front ui front flip box back ui back flip box trigger trigger rotate effect. Either click hover. Default click. width flipbox width. 1 12. session Shiny session object.","code":""},{"path":"/reference/flipbox.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A flipBox based on the W3C example — flipBox","text":"access state flipbox use input alias input$<id>. example, flipBox's id myawesomeflipbox, can access state via input$myawesomeflipbox TRUE corresponds front, FALSE back.","code":""},{"path":"/reference/flipbox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A flipBox based on the W3C example — flipBox","text":"","code":"if (interactive()) {  library(shiny)  library(shinydashboard)  library(shinydashboardPlus)  shinyApp(   ui = dashboardPage(     dashboardHeader(),     dashboardSidebar(),     dashboardBody(       fluidRow(         column(           width = 6,           uiOutput(\"active_side\"),            flipBox(             id = \"myflipbox\",              trigger = \"hover\",             width = 12,             front = div(               class = \"text-center\",               h1(\"Flip on hover\"),               img(                 src = \"https://image.flaticon.com/icons/svg/149/149076.svg\",                 height = \"300px\",                 width = \"100%\"               )             ),             back = div(               class = \"text-center\",               height = \"300px\",               width = \"100%\",               h1(\"Flip on hover\"),               p(\"More information....\")             )           )         ),         column(           width = 6,           uiOutput(\"active_side_2\"),           flipBox(             id = \"myflipbox2\",             width = 12,             front = div(               class = \"text-center\",               h1(\"Flip on click\"),               img(                 src = \"https://image.flaticon.com/icons/svg/149/149076.svg\",                 height = \"300px\",                 width = \"100%\"               )             ),             back = div(               class = \"text-center\",               height = \"300px\",               width = \"100%\",               h1(\"Flip on click\"),               p(\"More information....\")             )           )         )       )     )   ),      server = function(input, output, session) {     output$active_side <- renderUI({       side <- if (input$myflipbox) \"front\" else \"back\"       dashboardBadge(side, color = \"blue\")     })          output$active_side_2<- renderUI({       side <- if (input$myflipbox2) \"front\" else \"back\"       dashboardBadge(side, color = \"blue\")     })   }  ) } if (interactive()) {  library(shiny)  library(shinydashboard)  library(shinydashboardPlus)  shinyApp(    ui = dashboardPage(      dashboardHeader(),      dashboardSidebar(),      dashboardBody(        actionButton(\"toggle\", \"Toggle flip box\"),        uiOutput(\"active_side\"),         flipBox(          id = \"myflipbox\",          front = div(            class = \"text-center\",            img(              src = \"https://image.flaticon.com/icons/svg/149/149076.svg\",              height = \"300px\",              width = \"100%\"            )          ),          back = div(            class = \"text-center\",            height = \"300px\",            width = \"100%\",            h1(\"Details....\"),            p(\"More information....\")          )        )      )    ),        server = function(input, output, session) {     output$active_side <- renderUI({      side <- if (input$myflipbox) \"front\" else \"back\"      dashboardBadge(side, color = \"blue\")     })          observeEvent(input$toggle, {      updateFlipBox(\"myflipbox\")     })    }  ) }"},{"path":"/reference/loadingState.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE2 loading state element — loadingState","title":"AdminLTE2 loading state element — loadingState","text":"section still work progress computation running","code":""},{"path":"/reference/loadingState.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE2 loading state element — loadingState","text":"","code":"loadingState()"},{"path":"/reference/loadingState.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"AdminLTE2 loading state element — loadingState","text":"Loading state can programmatically used conputation running instance.","code":""},{"path":"/reference/loadingState.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE2 loading state element — loadingState","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"/reference/loadingState.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE2 loading state element — loadingState","text":"","code":"if (interactive()) {   library(shiny)   library(shinydashboard)   library(shinydashboardPlus)    shinyApp(     ui = dashboardPage(       dashboardHeader(),       dashboardSidebar(),       dashboardBody(         box(           title = \"loading spinner\",           loadingState()         )       ),       title = \"Loading State\"     ),     server = function(input, output) { }   ) }"},{"path":"/reference/messageItem.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom messageItem — messageItem","title":"Custom messageItem — messageItem","text":"Custom messageItem","code":""},{"path":"/reference/messageItem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom messageItem — messageItem","text":"","code":"messageItem(   from,   message,   icon = shiny::icon(\"user\"),   time = NULL,   href = NULL,   inputId = NULL )"},{"path":"/reference/messageItem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom messageItem — messageItem","text":"message . message Text message. icon icon tag, created icon. time String representing time message sent. string may used. example, relative date/time like \"5 minutes\", \"today\", \"12:30pm yesterday\", absolute time, like \"2014-12-01 13:45\". NULL, time displayed. href optional URL link . inputId NULL, item behaves like action button.","code":""},{"path":"/reference/navPills.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE2 nav pill container — navPills","title":"AdminLTE2 nav pill container — navPills","text":"navPills creates container nav elements. vertically stacked. insert box. updateNavPills allows programmatically change currently selected navPillsItem client. navPillsItem creates nav pill item.","code":""},{"path":"/reference/navPills.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE2 nav pill container — navPills","text":"","code":"navPills(..., id = NULL)  updateNavPills(id, selected, session = shiny::getDefaultReactiveDomain())  navPillsItem(   left = NULL,   right = NULL,   color = NULL,   icon = NULL,   selected = FALSE )"},{"path":"/reference/navPills.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE2 nav pill container — navPills","text":"... slot navPillsItem. id navPills unique id target. selected Whether item active . FALSE default. session Shiny session object. left pill left text. right pill right text. color pill color: see list valid colors https://adminlte.io/themes/AdminLTE/pages/UI/general.html. See : light-blue (primary status): #3c8dbc . red (danger status): #dd4b39 . green (success status): #00a65a . aqua (info status): #00c0ef . yellow (warning status): #f39c12 . blue: #0073b7 . navy: #001F3F . teal: #39CCCC . olive: #3D9970 . lime: #01FF70 . orange: #FF851B . fuchsia: #F012BE . purple: #605ca8 . maroon: #D81B60 . black: #111 . gray: #d2d6de . icon pill icon, .","code":""},{"path":"/reference/navPills.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE2 nav pill container — navPills","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"/reference/navPills.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE2 nav pill container — navPills","text":"","code":"# navPills if (interactive()) {   library(shiny)   library(shinydashboard)   library(shinydashboardPlus)    shinyApp(     ui = dashboardPage(       dashboardHeader(),       dashboardSidebar(),       dashboardBody(         box(           title = \"Nav Pills\",           status = \"info\",           \"Box Body\",           footer = navPills(             id = \"pillItem\",             navPillsItem(               left = \"Item 1\",               color = \"green\",               right = 10             ),             navPillsItem(               left = \"Item 2\",               color = \"red\",               icon = icon(\"angle-down\"),               right = \"10%\",               active = TRUE             )           )         )       ),       title = \"Nav Pills\"     ),     server = function(input, output) {       observeEvent(input$pillItem, {         showNotification(sprintf(\"You clicked on pill N° %s\", input$pillItem), type = \"message\")       })     }   ) }   # update navPills if (interactive()) {   library(shiny)   library(shinydashboard)   library(shinydashboardPlus)    shinyApp(     ui = dashboardPage(       dashboardHeader(),       dashboardSidebar(),       dashboardBody(         radioButtons(\"controller\", \"Controller\", choices = c(1, 2, 3)),         br(),         box(           title = \"Nav Pills\",           status = \"info\",           \"Box Body\",           footer = navPills(             inputId = \"pills\",             navPillsItem(               left = \"Item 1\",               color = \"green\",               right = 10             ),             navPillsItem(               left = \"Item 2\",               color = \"red\",               icon = icon(\"angle-down\"),               right = \"10%\"             ),             navPillsItem(               left = \"Item 3\",               color = \"blue\",               icon = icon(\"angle-up\"),               right = \"30%\"             )           )         )       ),       title = \"Nav Pills\"     ),     server = function(input, output, session) {       observeEvent(input$controller, {         updateNavPills(id = \"pills\", selected = input$controller)       })       observeEvent(input$pills, {         showNotification(sprintf(\"You selected pill N° %s\", input$pills), type = \"message\")       })     }   ) }"},{"path":"/reference/notificationItem.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom notificationItem — notificationItem","title":"Custom notificationItem — notificationItem","text":"Custom notificationItem","code":""},{"path":"/reference/notificationItem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom notificationItem — notificationItem","text":"","code":"notificationItem(   text,   icon = shiny::icon(\"triangle-exclamation\"),   status = \"success\",   href = NULL,   inputId = NULL )"},{"path":"/reference/notificationItem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom notificationItem — notificationItem","text":"text notification text. icon icon tag, created icon. status status item determines item's background color. Valid statuses listed validStatuses. href optional URL link . inputId NULL, item behaves like action button.","code":""},{"path":"/reference/productList.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE2 product list container — productList","title":"AdminLTE2 product list container — productList","text":"productList creates container display commercial items elegant container. Insert box. productListItem creates product item insert productList.","code":""},{"path":"/reference/productList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE2 product list container — productList","text":"","code":"productList(...)  productListItem(..., image = NULL, title = NULL, subtitle = NULL, color = NULL)"},{"path":"/reference/productList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE2 product list container — productList","text":"... product description. image image url, . title product name. subtitle product price. color price color: see list valid colors https://adminlte.io/themes/AdminLTE/pages/UI/general.html. See : light-blue (primary status): #3c8dbc . red (danger status): #dd4b39 . green (success status): #00a65a . aqua (info status): #00c0ef . yellow (warning status): #f39c12 . blue: #0073b7 . navy: #001F3F . teal: #39CCCC . olive: #3D9970 . lime: #01FF70 . orange: #FF851B . fuchsia: #F012BE . purple: #605ca8 . maroon: #D81B60 . black: #111 . gray: #d2d6de .","code":""},{"path":"/reference/productList.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE2 product list container — productList","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"/reference/productList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE2 product list container — productList","text":"","code":"# Box with productList if (interactive()) {   library(shiny)   library(shinydashboard)   library(shinydashboardPlus)    shinyApp(     ui = dashboardPage(       dashboardHeader(),       dashboardSidebar(),       dashboardBody(         box(           title = \"Product List\",           status = \"primary\",           productList(             productListItem(               image = \"https://www.pngmart.com/files/1/Haier-TV-PNG.png\",               title = \"Samsung TV\",               subtitle = \"$1800\",               color = \"yellow\",               \"This is an amazing TV, but I don't like TV!\"             ),             productListItem(               image = \"https://upload.wikimedia.org/wikipedia/commons/7/77/IMac_Pro.svg\",               title = \"Imac 27\",               subtitle = \"$4999\",               color = \"red\",               \"This is were I spend most of my time!\"             )           )         )       ),       title = \"Product List\"     ),     server = function(input, output) { }   ) }"},{"path":"/reference/progressBar.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE2 vertical progress bar — progressBar","title":"AdminLTE2 vertical progress bar — progressBar","text":"creates vertical progress bar.","code":""},{"path":"/reference/progressBar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE2 vertical progress bar — progressBar","text":"","code":"progressBar(   value,   min = 0,   max = 100,   vertical = FALSE,   striped = FALSE,   animated = FALSE,   status = \"primary\",   size = NULL,   label = NULL )"},{"path":"/reference/progressBar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE2 vertical progress bar — progressBar","text":"value Progress bar value. Must min max. min Progress bar minimum value (0 default). max Progress bar maximum value (100 default). vertical Progress vertical layout. Default FALSE striped Whether progress striped . FALSE default. animated Whether progress active . FALSE default. Works striped TRUE. status Progress bar status. \"primary\" default \"warning\", \"info\", \"danger\" \"success\". Valid statuses defined follows: primary: #3c8dbc success: #00a65a info: #00c0ef warning: #f39c12 danger: #f56954 size Progress bar size. NULL default: \"sm\", \"xs\" \"xxs\" also available. label Progress label. NULL default.","code":""},{"path":"/reference/progressBar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE2 vertical progress bar — progressBar","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"/reference/progressBar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE2 vertical progress bar — progressBar","text":"","code":"if (interactive()) {   library(shiny)   library(shinydashboard)   library(shinydashboardPlus)    shinyApp(     ui = dashboardPage(       header = dashboardHeader(),       sidebar = dashboardSidebar(),       body = dashboardBody(         box(           title = \"Horizontal\",           progressBar(             value = 10,             striped = TRUE,             animated = TRUE,             label = \"10%\"           ),           progressBar(             value = 50,             status = \"warning\",             size = \"xs\"           ),           progressBar(             value = 20,             status = \"danger\",             size = \"sm\"           )         ),         box(           title = \"Vertical\",           progressBar(             value = 10,             striped = TRUE,             animated = TRUE,             vertical = TRUE           ),           progressBar(             value = 50,             status = \"warning\",             size = \"xs\",             vertical = TRUE           ),           progressBar(             value = 20,             status = \"danger\",             size = \"sm\",             vertical = TRUE           )         )       ),       title = \"Progress bars\"     ),     server = function(input, output) { }   ) }"},{"path":"/reference/renderUser.html","id":null,"dir":"Reference","previous_headings":"","what":"Create dynamic user output (server side) — renderUser","title":"Create dynamic user output (server side) — renderUser","text":"Create dynamic user output (server side)","code":""},{"path":"/reference/renderUser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create dynamic user output (server side) — renderUser","text":"","code":"renderUser(expr, env = parent.frame(), quoted = FALSE, outputArgs = list())"},{"path":"/reference/renderUser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create dynamic user output (server side) — renderUser","text":"expr expression returns Shiny tag object, HTML(), list objects. env parent environment reactive expression. default, calling environment, defining ordinary non-reactive expression. expr quosure quoted TRUE, env ignored. quoted TRUE, quote()ed value expr used expr evaluated. expr quosure like use expression value expr, must set quoted TRUE. outputArgs list arguments passed implicit call uiOutput() renderUI used interactive R Markdown document.","code":""},{"path":[]},{"path":"/reference/shinydashboardPlusGallery.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch the shinydashboardPlus Gallery — shinydashboardPlusGallery","title":"Launch the shinydashboardPlus Gallery — shinydashboardPlusGallery","text":"gallery components available shinydashboardPlus.","code":""},{"path":"/reference/shinydashboardPlusGallery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch the shinydashboardPlus Gallery — shinydashboardPlusGallery","text":"","code":"shinydashboardPlusGallery()"},{"path":"/reference/shinydashboardPlusGallery.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch the shinydashboardPlus Gallery — shinydashboardPlusGallery","text":"","code":"if (interactive()) {   shinydashboardPlusGallery()  }"},{"path":"/reference/sidebar.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dashboard sidebar. — dashboardSidebar","title":"Create a dashboard sidebar. — dashboardSidebar","text":"dashboard sidebar typically contains sidebarMenu, although may also contain sidebarSearchForm, Shiny inputs. updateSidebar allows toggle dashboardSidebar client.","code":""},{"path":"/reference/sidebar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dashboard sidebar. — dashboardSidebar","text":"","code":"dashboardSidebar(   ...,   disable = FALSE,   width = NULL,   collapsed = FALSE,   minified = TRUE,   id = NULL )  updateSidebar(id, session = shiny::getDefaultReactiveDomain())"},{"path":"/reference/sidebar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dashboard sidebar. — dashboardSidebar","text":"... Items put sidebar. disable TRUE, sidebar disabled. width width sidebar. must either number specifies width pixels, string specifies width CSS units. collapsed TRUE, sidebar collapsed app startup. minified Whether slightly close sidebar still show item icons. Default TRUE. id Sidebar id. session Shiny session object.","code":""},{"path":"/reference/sidebar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a dashboard sidebar. — dashboardSidebar","text":"","code":"if (interactive()) {  library(shiny)  library(shinydashboard)  library(shinydashboardPlus)    shinyApp(    ui = dashboardPage(      header = dashboardHeader(),      sidebar = dashboardSidebar(id = \"sidebar\"),      body = dashboardBody(        actionButton(inputId = \"sidebarToggle\", label = \"Toggle Sidebar\")      )    ),    server = function(input, output, session) {            observeEvent(input$sidebar, {        if (input$sidebar) {          showModal(modalDialog(            title = \"Alert\",            \"The sidebar is opened.\",            easyClose = TRUE,            footer = NULL          ))        }      })            observeEvent(input$sidebarToggle, {        updateSidebar(\"sidebar\")      })            observe({        print(input$sidebar)      })    }  ) }"},{"path":"/reference/skinSelector.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE2 skin selector — skinSelector","title":"AdminLTE2 skin selector — skinSelector","text":"skinSelector creates skin selector element. skinSelectorItem creates item insert skin selector object. Used internally skinSelector.","code":""},{"path":"/reference/skinSelector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE2 skin selector — skinSelector","text":"","code":"skinSelector()  skinSelectorItem(color)"},{"path":"/reference/skinSelector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE2 skin selector — skinSelector","text":"color Skin color: \"blue\", \"black\", \"purple\", \"red\", \"green\", \"yellow\" well \"blue-light\", \"black-light\", \"purple-light\", \"red-light\", \"green-light\"  \"yellow-light\".","code":""},{"path":"/reference/skinSelector.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE2 skin selector — skinSelector","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"/reference/skinSelector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE2 skin selector — skinSelector","text":"","code":"if (interactive()) {  library(shiny)  library(shinydashboard)  library(shinydashboardPlus)    shinyApp(    ui = dashboardPage(      header = dashboardHeader(),      sidebar = dashboardSidebar(),      body = dashboardBody(),      controlbar = dashboardControlbar(skinSelector()),      title = \"Skin Selector\"    ),    server = function(input, output) { }  ) }"},{"path":"/reference/socialBox.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE2 social box — socialBox","title":"AdminLTE2 social box — socialBox","text":"socialBox creates special box dedicated social content. userBlock goes title socialBox. boxComment inserted comment slot socialBox.","code":""},{"path":"/reference/socialBox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE2 social box — socialBox","text":"","code":"socialBox(   ...,   title = NULL,   footer = NULL,   width = 6,   height = NULL,   collapsible = TRUE,   collapsed = FALSE,   closable = FALSE,   boxToolSize = \"sm\",   headerBorder = TRUE,   label = NULL,   dropdownMenu = NULL,   sidebar = NULL,   id = NULL )  userBlock(image, title, subtitle = NULL, href = \"javascript:void(0)\")  boxComment(..., image, title = NULL, date = NULL)"},{"path":"/reference/socialBox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE2 social box — socialBox","text":"... comment content. title comment title. footer Optional footer text. width width box, using Bootstrap grid system. used row-based layouts. overall width region 12, default valueBox width 4 occupies 1/3 width. column-based layouts, use NULL width; width set column contains box. height height box, pixels CSS unit. default height scales automatically content. collapsible TRUE, display button upper right allows user collapse box. collapsed TRUE, start collapsed. must used collapsible=TRUE. closable TRUE, display button upper right allows user close box. boxToolSize Size toolbox: choose among \"xs\", \"sm\", \"md\", \"lg\". headerBorder Whether display border header body. TRUE default. label Slot boxLabel. dropdownMenu List items boxtool dropdown menu. Use boxDropdown. sidebar Slot boxSidebar. id passed, item behave like action button. image author image, . subtitle subtitle. href Target url page. date date publication.","code":""},{"path":"/reference/socialBox.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE2 social box — socialBox","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"/reference/socialBox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE2 social box — socialBox","text":"","code":"if (interactive()) {  library(shiny)  library(shinydashboard)  library(shinydashboardPlus)    shinyApp(     ui = dashboardPage(       dashboardHeader(),       dashboardSidebar(),       dashboardBody(         socialBox(           title = userBlock(             image = \"https://adminlte.io/themes/AdminLTE/dist/img/user4-128x128.jpg\",             title = \"Social Box\",             subtitle = \"example-01.05.2018\"           ),           \"Some text here!\",           attachmentBlock(             image = \"https://adminlte.io/themes/AdminLTE/dist/img/photo1.png\",             title = \"Test\",             href = \"https://google.com\",             \"This is the content\"           ),           lapply(X = 1:10, FUN = function(i) {             boxComment(               image = \"https://adminlte.io/themes/AdminLTE/dist/img/user3-128x128.jpg\",               title = paste(\"Comment\", i),               date = \"01.05.2018\",               paste0(\"The \", i, \"-th comment\")             )           }),           footer = \"The footer here!\"         )       ),       controlbar = dashboardControlbar(),       title = \"socialBox\"     ),     server = function(input, output) { }   ) }"},{"path":"/reference/socialButton.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE2 social button — socialButton","title":"AdminLTE2 social button — socialButton","text":"Create social button","code":""},{"path":"/reference/socialButton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE2 social button — socialButton","text":"","code":"socialButton(href, icon)"},{"path":"/reference/socialButton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE2 social button — socialButton","text":"href External link. icon social network icon: see valid names https://adminlte.io/themes/AdminLTE/pages/UI/buttons.html.","code":""},{"path":"/reference/socialButton.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE2 social button — socialButton","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"/reference/socialButton.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE2 social button — socialButton","text":"","code":"if (interactive()) {   library(shiny)   library(shinydashboard)   library(shinydashboardPlus)    shinyApp(     ui = dashboardPage(       dashboardHeader(),       dashboardSidebar(),       dashboardBody(         box(           title = \"Social Buttons\",           status = NULL,           socialButton(             href = \"https://dropbox.com\",             icon = icon(\"dropbox\")           ),           socialButton(             href = \"https://github.com\",             icon = icon(\"github\")           )         )       ),       title = \"Social Buttons\"     ),     server = function(input, output) { }   ) }"},{"path":"/reference/starBlock.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE2 starBlock — starBlock","title":"AdminLTE2 starBlock — starBlock","text":"Create starBlock item (ideal rating)","code":""},{"path":"/reference/starBlock.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE2 starBlock — starBlock","text":"","code":"starBlock(value, max = 5, color = \"yellow\")"},{"path":"/reference/starBlock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE2 starBlock — starBlock","text":"value Current score. positive lower equal max. max Maximum number stars block. color Star color: see validColors() documentation. See : light-blue (primary status): #3c8dbc . red (danger status): #dd4b39 . green (success status): #00a65a . aqua (info status): #00c0ef . yellow (warning status): #f39c12 . blue: #0073b7 . navy: #001F3F . teal: #39CCCC . olive: #3D9970 . lime: #01FF70 . orange: #FF851B . fuchsia: #F012BE . purple: #605ca8 . maroon: #D81B60 . black: #111 . gray: #d2d6de .","code":""},{"path":"/reference/starBlock.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE2 starBlock — starBlock","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"/reference/starBlock.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE2 starBlock — starBlock","text":"","code":"if (interactive()) {   library(shiny)   library(shinydashboard)   library(shinydashboardPlus)    shinyApp(     ui = dashboardPage(       dashboardHeader(),       dashboardSidebar(),       dashboardBody(         box(           title = \"Star example\",           starBlock(5),           starBlock(5, color = \"olive\"),           starBlock(1, color = \"maroon\"),           starBlock(3, color = \"teal\")         )       ),       title = \"starBlock\"     ),     server = function(input, output) { }   ) }"},{"path":"/reference/tagAssert.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that a tag has specified properties — tagAssert","title":"Assert that a tag has specified properties — tagAssert","text":"Assert tag specified properties","code":""},{"path":"/reference/tagAssert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that a tag has specified properties — tagAssert","text":"","code":"tagAssert(tag, type = NULL, class = NULL, allowUI = TRUE)"},{"path":"/reference/tagAssert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that a tag has specified properties — tagAssert","text":"tag tag object. type type tag, like \"div\", \"\", \"span\". class HTML class. allowUI TRUE (default), allow dynamic outputs generated uiOutput htmlOutput. dynamic output provided, tagAssert try validate contents.","code":""},{"path":"/reference/taskItem.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom taskItem — taskItem","title":"Custom taskItem — taskItem","text":"Custom taskItem","code":""},{"path":"/reference/taskItem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom taskItem — taskItem","text":"","code":"taskItem(text, value = 0, color = \"aqua\", href = NULL, inputId = NULL)"},{"path":"/reference/taskItem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom taskItem — taskItem","text":"text task text. value percent value use bar. color color bar. Valid colors listed validColors. href optional URL link . inputId NULL, item behaves like action button.","code":""},{"path":"/reference/taskItem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Custom taskItem — taskItem","text":"","code":"if (interactive()) {   library(shiny)   library(shinydashboard)   library(shinydashboardPlus)    shinyApp(     ui = dashboardPage(       dashboardHeader(         dropdownMenu(           type = \"tasks\",           badgeStatus = \"danger\",           taskItem(             inputId = \"mytask\",             value = 20,             color = \"aqua\",             text = \"Click me!\"           ),           taskItem(             value = 40,             color = \"green\",             text = \"Basic item\"           )         )       ),       dashboardSidebar(),       dashboardBody(),       title = \"Dashboard example\"     ),     server = function(input, output) {       observeEvent(input$mytask, {         showModal(modalDialog(           title = \"Important message\",           \"This is an important message!\"         ))       })     }   ) }"},{"path":"/reference/timeline.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE2 timeline block — timelineBlock","title":"AdminLTE2 timeline block — timelineBlock","text":"timelineBlock creates timeline block may inserted box outside. timelineLabel creates timeline label element highlight event. timelineItem creates timeline item contains information given event like title, description, date, ... timelineItemMedia create specific container images. timelineStart indicates starting point. timelineEnd indicates end point.","code":""},{"path":"/reference/timeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE2 timeline block — timelineBlock","text":"","code":"timelineBlock(..., reversed = TRUE, width = 6)  timelineLabel(..., color = NULL)  timelineItem(   ...,   icon = NULL,   color = NULL,   time = NULL,   title = NULL,   border = TRUE,   footer = NULL )  timelineItemMedia(image = NULL, height = NULL, width = NULL)  timelineStart(icon = shiny::icon(\"clock\"), color = NULL)  timelineEnd(icon = shiny::icon(\"hourglass-end\"), color = NULL)"},{"path":"/reference/timeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE2 timeline block — timelineBlock","text":"... element. reversed Whether timeline reversed . width media width pixels. color item color: see list valid colors https://adminlte.io/themes/AdminLTE/pages/UI/general.html. See : light-blue (primary status): #3c8dbc . red (danger status): #dd4b39 . green (success status): #00a65a . aqua (info status): #00c0ef . yellow (warning status): #f39c12 . blue: #0073b7 . navy: #001F3F . teal: #39CCCC . olive: #3D9970 . lime: #01FF70 . orange: #FF851B . fuchsia: #F012BE . purple: #605ca8 . maroon: #D81B60 . black: #111 . gray: #d2d6de . icon item icon. Expect icon. time item date time. title item title. border Whether display border header body. TRUE default. footer item footer . image media url path. height media height pixels.","code":""},{"path":"/reference/timeline.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE2 timeline block — timelineBlock","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"/reference/timeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE2 timeline block — timelineBlock","text":"","code":"if (interactive()) {   library(shiny)   library(shinydashboard)   library(shinydashboardPlus)    shinyApp(     ui = dashboardPage(       dashboardHeader(),       dashboardSidebar(),       dashboardBody(         h3(\"When Reversed = TRUE, can be displayed inside a box\"),         box(           title = \"Timeline\",           status = \"info\",           timelineBlock(             width = 12,             timelineEnd(color = \"red\"),             timelineLabel(2018, color = \"teal\"),             timelineItem(               title = \"Item 1\",               icon = icon(\"gears\"),               color = \"olive\",               time = \"now\",               footer = \"Here is the footer\",               \"This is the body\"             ),             timelineItem(               title = \"Item 2\",               border = FALSE             ),             timelineLabel(2015, color = \"orange\"),             timelineItem(               title = \"Item 3\",               icon = icon(\"paint-brush\"),               color = \"maroon\",               timelineItemMedia(image = \"https://placehold.it/150x100\"),               timelineItemMedia(image = \"https://placehold.it/150x100\")             ),             timelineStart(color = \"purple\")           )         ),         h3(\"When Reversed = FALSE, can be displayed out of a box\"),         timelineBlock(           reversed = FALSE,           timelineEnd(color = \"red\"),           timelineLabel(2018, color = \"teal\"),           timelineItem(             title = \"Item 1\",             icon = icon(\"gears\"),             color = \"olive\",             time = \"now\",             footer = \"Here is the footer\",             \"This is the body\"           ),           timelineItem(             title = \"Item 2\",             border = FALSE           ),           timelineLabel(2015, color = \"orange\"),           timelineItem(             title = \"Item 3\",             icon = icon(\"paint-brush\"),             color = \"maroon\",             timelineItemMedia(image = \"https://placehold.it/150x100\"),             timelineItemMedia(image = \"https://placehold.it/150x100\")           ),           timelineStart(color = \"purple\")         )       ),       title = \"timelineBlock\"     ),     server = function(input, output) { }   ) }"},{"path":"/reference/todoList.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE2 todo list container — todoList","title":"AdminLTE2 todo list container — todoList","text":"Create todo list container. May included box. todoListItem creates todo list item.","code":""},{"path":"/reference/todoList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE2 todo list container — todoList","text":"","code":"todoList(..., sortable = TRUE)  todoListItem(..., checked = FALSE, label = NULL)"},{"path":"/reference/todoList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE2 todo list container — todoList","text":"... element labels, ... sortable Whether list elements sortable . checked Whether list item checked . label item label.","code":""},{"path":"/reference/todoList.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE2 todo list container — todoList","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"/reference/todoList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE2 todo list container — todoList","text":"","code":"if (interactive()) {   library(shiny)   library(shinydashboard)   library(shinyjqui)   library(shinydashboardPlus)    shinyApp(     ui = dashboardPage(       dashboardHeader(),       dashboardSidebar(),       dashboardBody(         box(           \"Sortable todo list demo\",           status = \"warning\",           todoList(             todoListItem(               label = \"Design a nice theme\",               \"Some text here\"             ),             todoListItem(               label = \"Make the theme responsive\",               \"Some text here\"             ),             todoListItem(               checked = TRUE,               label = \"Let theme shine like a star\"             )           )         ),         box(           \"Simple todo list demo\",           status = \"warning\",           todoList(             sortable = FALSE,             todoListItem(               label = \"Design a nice theme\",               \"Some text here\"             ),             todoListItem(               label = \"Make the theme responsive\",               \"Some text here\"             ),             todoListItem(               checked = TRUE,               label = \"Let theme shine like a star\"             )           )         )       ),       title = \"Todo Lists\"     ),     server = function(input, output) { }   ) }"},{"path":"/reference/userBox.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE2 user box — userBox","title":"AdminLTE2 user box — userBox","text":"userBox creates user card. userDescription creates customized title tag userBox.","code":""},{"path":"/reference/userBox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE2 user box — userBox","text":"","code":"userBox(   ...,   title = NULL,   footer = NULL,   status = NULL,   background = NULL,   width = 6,   height = NULL,   collapsible = TRUE,   collapsed = FALSE,   closable = FALSE,   gradient = FALSE,   boxToolSize = \"sm\",   headerBorder = TRUE,   label = NULL,   dropdownMenu = NULL,   sidebar = NULL,   id = NULL )  userDescription(   title,   subtitle = NULL,   image,   backgroundImage = NULL,   type = c(1, 2),   imageElevation = NULL )"},{"path":"/reference/userBox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE2 user box — userBox","text":"... element descriptionBlock. title User card title. footer Optional footer text. status status item determines item's background   color.  Valid statuses defined follows: primary: #3c8dbc success: #00a65a info: #00c0ef warning: #f39c12 danger: #f56954 navy: #001F3F teal: #39CCCC purple: #605ca8 orange: #ff851b maroon: #D81B60 black: #111111 primary, success, info, warning danger compatible solidHeader! background NULL (default), background box   white. Otherwise, color string. Valid colors listed   validColors. See : light-blue (primary status): #3c8dbc . red (danger status): #dd4b39 . green (success status): #00a65a . aqua (info status): #00c0ef . yellow (warning status): #f39c12 . blue: #0073b7 . navy: #001F3F . teal: #39CCCC . olive: #3D9970 . lime: #01FF70 . orange: #FF851B . fuchsia: #F012BE . purple: #605ca8 . maroon: #D81B60 . black: #111 . gray: #d2d6de . width width box, using Bootstrap grid system. used row-based layouts. overall width region 12, default valueBox width 4 occupies 1/3 width. column-based layouts, use NULL width; width set column contains box. height height box, pixels CSS unit. default height scales automatically content. collapsible TRUE, display button upper right allows user collapse box. collapsed TRUE, start collapsed. must used collapsible=TRUE. closable TRUE, display button upper right allows user close box. gradient Whether allow gradient effect background color. Default FALSE. boxToolSize Size toolbox: choose among \"xs\", \"sm\", \"md\", \"lg\". headerBorder Whether display border header body. TRUE default. label Slot boxLabel. dropdownMenu List items boxtool dropdown menu. Use boxDropdown. sidebar Slot boxSidebar. id passed, item behave like action button. subtitle User card subtitle. image User image url path. backgroundImage image url, . Background needs TRUE. type User card type. Either 1 2. 1 corresponds centered user image, 2 left aligned user image. imageElevation User card image elevation (numeric). NULL default.","code":""},{"path":"/reference/userBox.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE2 user box — userBox","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"/reference/userBox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE2 user box — userBox","text":"","code":"if (interactive()) {  library(shiny)  library(shinydashboard)  library(shinydashboardPlus)    shinyApp(     ui = dashboardPage(       header = dashboardHeader(),       sidebar = dashboardSidebar(),       controlbar = dashboardControlbar(),       footer = dashboardFooter(),       title = \"test\",       body = dashboardBody(         userBox(           title = userDescription(             title = \"Nadia Carmichael\",             subtitle = \"lead Developer\",             type = 2,             image = \"https://adminlte.io/themes/AdminLTE/dist/img/user7-128x128.jpg\",           ),           status = \"primary\",           gradient = TRUE,           background = \"light-blue\",           boxToolSize = \"xl\",           \"Some text here!\",           footer = \"The footer here!\"         ),         userBox(           title = userDescription(             title = \"Alexander Pierce\",             subtitle = \"Founder & CEO\",             type = 1,             image = \"https://adminlte.io/themes/AdminLTE/dist/img/user1-128x128.jpg\",           ),           status = \"purple\",           closable = TRUE,           \"Some text here!\",           footer = \"The footer here!\"         ),         userBox(           title = userDescription(             title = \"Elizabeth Pierce\",             subtitle = \"Web Designer\",             image = \"https://adminlte.io/themes/AdminLTE/dist/img/user3-128x128.jpg\",             backgroundImage = \"https://cdn.statically.io/img/wallpaperaccess.com/full/1119564.jpg\",           ),           status = \"teal\",           closable = TRUE,           maximizable = TRUE,           \"Some text here!\",           footer = \"The footer here!\"         )       )     ),     server = function(input, output) {}   ) }"},{"path":"/reference/userList.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE2 user list container — userList","title":"AdminLTE2 user list container — userList","text":"userList creates user list container inserted box. userListItem creates user list item.","code":""},{"path":"/reference/userList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE2 user list container — userList","text":"","code":"userList(...)  userListItem(image, title, subtitle = NULL)"},{"path":"/reference/userList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE2 user list container — userList","text":"... slot userListItem. image image url path. title Item title. subtitle Item subtitle.","code":""},{"path":"/reference/userList.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE2 user list container — userList","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"/reference/userList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE2 user list container — userList","text":"","code":"if (interactive()) {   library(shiny)   library(shinydashboard)   library(shinydashboardPlus)    shinyApp(     ui = dashboardPage(       dashboardHeader(),       dashboardSidebar(),       dashboardBody(         box(           title = \"User List example\",           status = \"success\",           userList(             userListItem(               image = \"https://adminlte.io/themes/AdminLTE/dist/img/user1-128x128.jpg\",               title = \"Shiny\",               subtitle = \"Package 1\"             ),             userListItem(               image = \"https://adminlte.io/themes/AdminLTE/dist/img/user7-128x128.jpg\",               title = \"Tidyverse\",               subtitle = \"Package 2\"             ),             userListItem(               image = \"https://adminlte.io/themes/AdminLTE/dist/img/user5-128x128.jpg\",               title = \"tidyr\",               subtitle = \"Package 3\"             )           )         )       ),       title = \"User List\"     ),     server = function(input, output) { }   ) }"},{"path":"/reference/userMessage.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE2 user message container — userMessages","title":"AdminLTE2 user message container — userMessages","text":"userMessages creates user message container. Maybe inserted box. userMessage creates user message html element. updateUserMessages allows interact userMessages container, sending, removing editing messages.","code":""},{"path":"/reference/userMessage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE2 user message container — userMessages","text":"","code":"userMessages(..., id = NULL, status, width = 4, height = NULL)  userMessage(   ...,   author,   date = NULL,   image = NULL,   type = c(\"sent\", \"received\") )  updateUserMessages(   id,   action = c(\"add\", \"remove\", \"update\"),   index = NULL,   content = NULL,   session = shiny::getDefaultReactiveDomain() )"},{"path":"/reference/userMessage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE2 user message container — userMessages","text":"... Message text. id userMessages target. status Messages status. See list valid colors https://adminlte.io/themes/AdminLTE/pages/UI/general.html. Valid statuses defined follows: primary: #3c8dbc success: #00a65a info: #00c0ef warning: #f39c12 danger: #f56954 width Container width: 1 12. height Container height. author Message author. date Message date. image Message author image path url. type Message type: c(\"sent\", \"received\"). action Action perform: add, remove update. index Index item update remove. content New message content list. actions like add update ! See example. session Shiny session object.","code":""},{"path":"/reference/userMessage.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE2 user message container — userMessages","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"/reference/userMessage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE2 user message container — userMessages","text":"","code":"if (interactive()) {   library(shiny)   library(shinydashboard)   library(shinydashboardPlus)    shinyApp(     ui = dashboardPage(       dashboardHeader(),       dashboardSidebar(),       dashboardBody(         box(           title = \"Box with messages\",           solidHeader = TRUE,           status = \"warning\",           userMessages(             width = 12,             status = \"success\",             userMessage(               author = \"Alexander Pierce\",               date = \"20 Jan 2:00 pm\",               image = \"https://adminlte.io/themes/AdminLTE/dist/img/user1-128x128.jpg\",               type = \"sent\",               \"Is this template really for free? That's unbelievable!\"             ),             userMessage(               author = \"Sarah Bullock\",               date = \"23 Jan 2:05 pm\",               image = \"https://adminlte.io/themes/AdminLTE/dist/img/user3-128x128.jpg\",               type = \"received\",               \"You better believe it!\"             )           )         ),         userMessages(           width = 6,           status = \"danger\",           userMessage(             author = \"Alexander Pierce\",             date = \"20 Jan 2:00 pm\",             image = \"https://adminlte.io/themes/AdminLTE/dist/img/user1-128x128.jpg\",             type = \"received\",             \"Is this template really for free? That's unbelievable!\"           ),           userMessage(             author = \"Sarah Bullock\",             date = \"23 Jan 2:05 pm\",             image = \"https://adminlte.io/themes/AdminLTE/dist/img/user3-128x128.jpg\",             type = \"sent\",             \"You better believe it!\"           )         )       ),       title = \"user Message\"     ),     server = function(input, output) { }   ) }  if (interactive()) {   library(shiny)   library(shinydashboard)   library(shinydashboardPlus)    shinyApp(     ui = dashboardPage(       dashboardHeader(),       dashboardSidebar(),       dashboardBody(         fluidRow(           actionButton(\"remove\", \"Remove message\"),           actionButton(\"add\", \"Add message\"),           actionButton(\"update\", \"Update message\")         ),         numericInput(\"index\", \"Message index:\", 1, min = 1, max = 3),         br(),         br(),         userMessages(           width = 6,           status = \"danger\",           id = \"message\",           userMessage(             author = \"Alexander Pierce\",             date = \"20 Jan 2:00 pm\",             image = \"https://adminlte.io/themes/AdminLTE/dist/img/user1-128x128.jpg\",             type = \"received\",             \"Is this template really for free? That's unbelievable!\"           ),           userMessage(             author = \"Sarah Bullock\",             date = \"23 Jan 2:05 pm\",             image = \"https://adminlte.io/themes/AdminLTE/dist/img/user3-128x128.jpg\",             type = \"sent\",             \"You better believe it!\"           )         )       ),       title = \"user Message\"     ),     server = function(input, output, session) {       observeEvent(input$remove, {         updateUserMessages(\"message\", action = \"remove\", index = input$index)       })       observeEvent(input$add, {         updateUserMessages(           \"message\",           action = \"add\",           content = list(             author = \"David\",             date = \"Now\",             image = \"https://i.pinimg.com/originals/f1/15/df/f115dfc9cab063597b1221d015996b39.jpg\",             type = \"received\",             text = tagList(               sliderInput(                 \"obs\",                 \"Number of observations:\",                 min = 0,                 max = 1000,                 value = 500               ),               plotOutput(\"distPlot\")             )           )         )       })        output$distPlot <- renderPlot({         hist(rnorm(input$obs))       })        observeEvent(input$update, {         updateUserMessages(           \"message\",           action = \"update\",           index = input$index,           content = list(             text = tagList(               appButton(                 inputId = \"reload\",                 label = \"Click me!\",                 icon = icon(\"arrows-rotate\"),                 dashboardBadge(1, color = \"orange\")               )             )           )         )       })        observeEvent(input$reload, {         showNotification(\"Yeah!\", duration = 1, type = \"default\")       })     }   ) }"},{"path":"/reference/userOutput.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dynamic user output (client side) — userOutput","title":"Create a dynamic user output (client side) — userOutput","text":"can used placeholder dynamically-generated dashboardUser.","code":""},{"path":"/reference/userOutput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dynamic user output (client side) — userOutput","text":"","code":"userOutput(id, tag = shiny::tags$li)"},{"path":"/reference/userOutput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dynamic user output (client side) — userOutput","text":"id Output variable name. tag tag function, like tags$li tags$ul.","code":""},{"path":[]},{"path":"/reference/userPost.html","id":null,"dir":"Reference","previous_headings":"","what":"AdminLTE2 user post — userPost","title":"AdminLTE2 user post — userPost","text":"userPost creates user post. content may inserted box. userPostTagItems creates container host userPostTagItem. userPostTagItem creates user post tool item userPostMedia creates container include image userPost.","code":""},{"path":"/reference/userPost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AdminLTE2 user post — userPost","text":"","code":"userPost(   ...,   id = NULL,   image,   author,   description = NULL,   collapsible = TRUE,   collapsed = FALSE )  userPostTagItems(...)  userPostTagItem(..., side = \"left\")  userPostMedia(image, height = NULL, width = NULL)"},{"path":"/reference/userPost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AdminLTE2 user post — userPost","text":"... tool content label, button, ... id unique id post. image image path url ... author post author. description post description. collapsible TRUE, display button upper right allows user collapse comment. collapsed Whether comment collapsed application starts, FALSE default. side tool item orientation: \"left\" \"right\", \"left\" default. height media height pixels. width media width pixels.","code":""},{"path":"/reference/userPost.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AdminLTE2 user post — userPost","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"/reference/userPost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AdminLTE2 user post — userPost","text":"","code":"if (interactive()) {   library(shiny)   library(shinydashboard)   library(shinydashboardPlus)    shinyApp(     ui = dashboardPage(       dashboardHeader(),       dashboardSidebar(),       dashboardBody(         box(           title = \"Box with user comment\",           status = \"primary\",           userPost(             id = 1,             image = \"https://adminlte.io/themes/AdminLTE/dist/img/user1-128x128.jpg\",             author = \"Jonathan Burke Jr.\",             description = \"Shared publicly - 7:30 PM today\",             \"Lorem ipsum represents a long-held tradition for designers,        typographers and the like. Some people hate it and argue for        its demise, but others ignore the hate as they create awesome        tools to help create filler text for everyone from bacon        lovers to Charlie Sheen fans.\",             collapsible = FALSE,             userPostTagItems(               userPostTagItem(dashboardLabel(\"item 1\", status = \"info\")),               userPostTagItem(dashboardLabel(\"item 2\", status = \"danger\"), side = \"right\")             )           ),           userPost(             id = 2,             image = \"https://adminlte.io/themes/AdminLTE/dist/img/user6-128x128.jpg\",             author = \"Adam Jones\",             userPostMedia(image = \"https://adminlte.io/themes/AdminLTE/dist/img/photo2.png\"),             userPostTagItems(               userPostTagItem(dashboardLabel(\"item 1\", status = \"success\")),               userPostTagItem(dashboardLabel(\"item 2\", status = \"danger\"), side = \"right\")             )           )         )       ),       title = \"userPost\"     ),     server = function(input, output) { }   ) }"},{"path":"/reference/validColors.html","id":null,"dir":"Reference","previous_headings":"","what":"Valid colors — validColors","title":"Valid colors — validColors","text":"valid colors various dashboard components. Valid colors listed .","code":""},{"path":"/reference/validColors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Valid colors — validColors","text":"red yellow aqua blue light-blue green navy teal olive lime orange fuchsia purple maroon black","code":""},{"path":"/reference/validStatuses.html","id":null,"dir":"Reference","previous_headings":"","what":"Valid statuses — validStatuses","title":"Valid statuses — validStatuses","text":"status strings correspond colors defined Bootstrap's CSS. Although colors can vary depending particular CSS selector, generally appear follows:","code":""},{"path":"/reference/validStatuses.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Valid statuses — validStatuses","text":"primary Blue (sometimes dark blue) success Green info Blue warning Orange danger Red","code":""},{"path":"/reference/validStatusesPlus.html","id":null,"dir":"Reference","previous_headings":"","what":"Valid statuses extra — validStatusesPlus","title":"Valid statuses extra — validStatusesPlus","text":"status strings correspond colors defined adminLTE extra colors. Although colors can vary depending particular CSS selector, generally appear follows:","code":""},{"path":"/reference/validStatusesPlus.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Valid statuses extra — validStatusesPlus","text":"primary Blue (sometimes dark blue) success Green info Blue warning Orange danger Red navy Dark Grey/Blue teal Blue/Green orange Orange purple Purple maroon Pink black Black","code":""},{"path":"/news/index.html","id":"shinydashboardplus-205","dir":"Changelog","previous_headings":"","what":"shinydashboardPlus 2.0.5","title":"shinydashboardPlus 2.0.5","text":"Add shinylive support different demo apps.","code":""},{"path":"/news/index.html","id":"shinydashboardplus-204","dir":"Changelog","previous_headings":"","what":"shinydashboardPlus 2.0.4","title":"shinydashboardPlus 2.0.4","text":"CRAN release: 2024-04-09","code":""},{"path":"/news/index.html","id":"minor-change-2-0-4","dir":"Changelog","previous_headings":"","what":"Minor change","title":"shinydashboardPlus 2.0.4","text":"Fix #181. Update github actions. Icon change dashboardHeader(). Thanks @zhanxw. Allow hyperlink User block. Thanks @robertkck. Fix multiple fontawesome icon issues (deprecated names fontawesome 6).","code":""},{"path":"/news/index.html","id":"shinydashboardplus-203","dir":"Changelog","previous_headings":"","what":"shinydashboardPlus 2.0.3","title":"shinydashboardPlus 2.0.3","text":"CRAN release: 2021-09-15 release patch fix issue preventing release Shiny 1.7.0. Thanks @wch.","code":""},{"path":"/news/index.html","id":"minor-change-2-0-3","dir":"Changelog","previous_headings":"","what":"Minor change","title":"shinydashboardPlus 2.0.3","text":"Internal change regarding waiter package user impact. Thanks @JohnCoene.","code":""},{"path":"/news/index.html","id":"bug-fix-2-0-3","dir":"Changelog","previous_headings":"","what":"Bug fix","title":"shinydashboardPlus 2.0.3","text":"Fix #150: Warning using controlbarMenu.","code":""},{"path":"/news/index.html","id":"shinydashboardplus-202","dir":"Changelog","previous_headings":"","what":"shinydashboardPlus 2.0.2","title":"shinydashboardPlus 2.0.2","text":"CRAN release: 2021-07-16 Simple patch fix wrong .Rbuildignore rule. Update internal file structure. Clean NOTE: https://cran.rstudio.com//web/checks/check_results_shinydashboardPlus.html","code":""},{"path":"/news/index.html","id":"shinydashboardplus-201","dir":"Changelog","previous_headings":"","what":"shinydashboardPlus 2.0.1","title":"shinydashboardPlus 2.0.1","text":"CRAN release: 2021-04-26 release patch without major changes.","code":""},{"path":"/news/index.html","id":"minor-change-2-0-1","dir":"Changelog","previous_headings":"","what":"Minor change","title":"shinydashboardPlus 2.0.1","text":"Fix #132: Option disable “scroll top” button dashboardPage()","code":""},{"path":"/news/index.html","id":"bug-fix-2-0-1","dir":"Changelog","previous_headings":"","what":"Bug fix","title":"shinydashboardPlus 2.0.1","text":"Fix #127: shiny::navlistPanel() dashboardControlbar() behaving expected. Fix #112: userBox() working. Introduced 2.0.0.","code":""},{"path":"/news/index.html","id":"shinydashboardplus-200","dir":"Changelog","previous_headings":"","what":"shinydashboardPlus 2.0.0","title":"shinydashboardPlus 2.0.0","text":"CRAN release: 2021-03-07 release major step shinydashboardPlus. also significant breaking change compared latest CRAN version. Overall release simplify transition shinydashboard shinydashboardPlus bring consistency, interactivity components. changelog.","code":""},{"path":"/news/index.html","id":"breaking-changes-2-0-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"shinydashboardPlus 2.0.0","text":"Change maxstar grade starBlock() max value. Remove footerPadding boxPlus() align bs4Dash Remove sidebar related parameters boxPlus(). now part new boxPlusSidebar() remove dropdownIcon parameter boxPlus(). now part dropdownItemList() Remove label params boxPlus(). reduce number parameters cards. Now part boxPlusLabel() dropdownItemList() icon must provided shiny::icon() simple string containing icon name. consistent {shinydashboard} Replace left_text right_text left right, respectively dashboardFooter() Remove sidebar related parameters dashboardPagePlus(). now belong dashboardSidebarPlus() Align {shinydashboard} dashboardSidebarPlus(): replace rightSidebar controlbar (align {bs4Dash}). Rename enable_preloader preloader loading_duration duration Rename rightSidebar() dashboardControlbar() align {bs4Dash} Remove enable_rightSidebar dashboardHeaderPlus(). now part dashboardControlbar() disable like {shinydashboard}. rightSidebarIcon becomes controlbarIcon accepts shiny::icon instead simple string containing icon name consistent {shinydashboard}. left_menu becomes leftUi like {bs4Dash} Remove rightSiderbarMenu(), rightSidebarTablist(), rightSidebarTabItem(), rightSidebarPanel() rightSidebarTabContent(). now replaces dashboardControlbar(), controlbarMenu() controlbarItem() Remove rightSidebarMenuItem(), menuIcon() menuInfo() Rename boxPlus() box(), dashboardPagePlus() dashboardPage() dashboardHeaderPlus() dashboardHeader() dropdownBlock() icon expects shiny::icon() simple string containing icon name. consistent {shinydashboard} gradientBox() icon expects shiny::icon() simple string containing icon name. consistent {shinydashboard} descriptionBlock() icon expects shiny::icon() simple string containing icon name. consistent {shinydashboard} Rework navPillsItem(): pillName becomes left, pillText becomes right, pillColor becomes color, pillIcon becomes icon expects shiny::icon(). Add inputId item behaves like action button Rework productListItem(): productTitle becomes title, productPrice becomes subtitle, priceColor becomes color timelineItem(), timelineStart() timelineEnd(), icon expects shiny::icon() simple string containing icon name. consistent {shinydashboard} userListItem(), user_name becomes title, description becomes subtitle dropdownItemList() becomes boxDropdown(). dropdownItem() becomes boxDropdownItem() userPostToolItemList() becomes userPostTagItems(). userPostToolItem() becomes userPostTagItem() Remove boxProfileItemList(). boxProfile() gets new parameter bordered, inherited old boxProfileItemList() boxProfile(), title becomes mandatory title description mandatory boxProfileItem() boxComment(): src title mandatory widgetUserBox() becomes userBox() naming consistency Remove gradientBox() consistency {bs4Dash} Add icon, gradient boxToolSize box() title mandatory userBox(). Remove background. Replace backgroundUrl backgroundImage. Reworked type parameter Restore accordion() id. distinguish TRUE inputs (sliderInput) secondary inputs (can use interactivity)… color becomes status accordionItem(). consistent AdminLTE2 classes {shinydashboard} attachmentBlock(): src becomes image titleUrl becomes href. image mandatory socialButton(): url becomes href type becomes icon (expect shiny::icon) productListItem(): src becomes image consistent {shinydashboard} timelineItemMedia(): src becomes image consistent {shinydashboard} userListItem(): src becomes image consistent {shinydashboard} userPost(): src becomes image consistent {shinydashboard}. image author mandatory userPostMedia(): src becomes image consistent {shinydashboard}. image mandatory Reworked verticalProgress() progressBar() userMessage(): src becomes image consistent {shinydashboard}. side becomes type (semantic) dashboardUser(): src becomes image consistent {shinydashboard} userBox(): src becomes image consistent {shinydashboard} socialBox(): src becomes image consistent {shinydashboard} boxComment(): src becomes image consistent {shinydashboard} boxProfile(): src becomes image consistent {shinydashboard} boxDropdownItem(): url becomes href consistent {shinydashboard}. name removed Rework preloader feature: remove duration preloader now expects list… navPillsItem(): active becomes selected","code":""},{"path":"/news/index.html","id":"new-features-2-0-0","dir":"Changelog","previous_headings":"","what":"New features","title":"shinydashboardPlus 2.0.0","text":"Completely redesigned pkgdown website much better documentation New updateUserMessages() function New updateAccordion() toggle accordion() client Automatic “scroll top” feature quickly go top dashboard Use waiter custom preloaders Add inputId taskItem(), notificationItem() messageItem() New id icon boxDropdownItem(), behaves like action button passed New updateNavPills() programmatically change selected item navPills() Add freshTheme parameter dashboardPage(). allows use awsesome fresh package. See details. Add skinSelector() allow dynamically change dashboard skin client side. Add updateControlbarMenu() programmatically change selected controlbar item Add id dashboardControlbar() able use updateControlbar() Add id dashboardSidebar() able use updateSidebar() New dashboardSidebar() (reworked shinydashboard sidebar) New boxLabel() add text labels box() New boxSidebar(): access status via input$id. Add updateBoxSidebar() toggle box sidebar new options parameter dashboardPage(). See list available options Toggle box() updateBox() (see #10 #69, @happyshows @daatali)","code":""},{"path":"/news/index.html","id":"minor-change-2-0-0","dir":"Changelog","previous_headings":"","what":"Minor change","title":"shinydashboardPlus 2.0.0","text":"Add headerBorder box() add width accordion() (default 12) Simplified dependencies code (end-user impact)","code":""},{"path":"/news/index.html","id":"bug-fixes-2-0-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"shinydashboardPlus 2.0.0","text":"Fix #102: dashboardUser displayed using shinydashboard::sidebarMenuOutput. ensureActivatedTab global scope, whereas needed output binding code Fix #107: collapsed = FALSE working dashboardControlbar. Fix #56: controlbar expanded/collapsed, plot fit body. Fix #78: Menu Item Sub Menu Item Arrow Rotating. Fix #105: box animation speed. Allow user defined options prevail internals. Fix #57: broken default input$sidebarCollapsed. Fix #86: controlbar also trigger window resize, like left shinydashboard sidebar. Thanks @ajfisher83 Fix ugly layout box body (wrong padding margins) one puts sidebar box()… title mandatory accordionItem() (Setting title NULL prevent item able collapse …)","code":""},{"path":"/news/index.html","id":"shinydashboardplus-075","dir":"Changelog","previous_headings":"","what":"shinydashboardPlus 0.7.5","title":"shinydashboardPlus 0.7.5","text":"CRAN release: 2020-07-15","code":""},{"path":"/news/index.html","id":"experimental-0-7-5","dir":"Changelog","previous_headings":"","what":"Experimental","title":"shinydashboardPlus 0.7.5","text":"New dark theme: midnight (still work progress, elements missing)","code":""},{"path":"/news/index.html","id":"breaking-changes-0-7-5","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"shinydashboardPlus 0.7.5","text":"accordion() id becomes inputId. accordionItem() id parameter removed rework appButton() : classic shiny actionButton, improved styling. change title_url titleUrl attachmentBlock() change number_color, number_icon, margin_bottom rightBorder camelcase params descriptionBlock() numberIcon descriptionBlock() need name icon (‘times’) instead full class (like fa fa-times) ## New features add userMessages() userMessage() add dashboardBadge(): use elements like appButton(). different dashboardLabel()","code":""},{"path":"/news/index.html","id":"minor-change-0-7-5","dir":"Changelog","previous_headings":"","what":"Minor Change","title":"shinydashboardPlus 0.7.5","text":"Fix #52: add collapsed arg widgetUserBox(). Thanks @terpsrule Fix #40: add sidebar_icon argument boxPlus(). Thanks @jmw86069 suggestion","code":""},{"path":"/news/index.html","id":"bug-fixes-0-7-5","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"shinydashboardPlus 0.7.5","text":"Fix #61: uniqueness accordion() id. Thanks @RegaCaska Fix #23: rework id arg flipBox(). Thanks @vinpogo Add class btn-box-tool close button widgetUserBox(). Prevent ugly rendering Fix #51: change card sidebar z-index displayed top page preloader. Thanks @leungi Fix #53: missing title demo message card Fix #55: image provided, circle displayed. Thanks @nschwamm Replace http links https Fix #36: make sure carousel() item displayed generated via shiny Output function. Thanks @daattali report","code":""},{"path":"/news/index.html","id":"shinydashboardplus-070","dir":"Changelog","previous_headings":"","what":"shinydashboardPlus 0.7.0","title":"shinydashboardPlus 0.7.0","text":"CRAN release: 2019-04-08","code":""},{"path":"/news/index.html","id":"breaking-changes-0-7-0","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"shinydashboardPlus 0.7.0","text":"remove CSS functions, namely setShadow(), setPulse(), setShake() setZoom(), since contained shinyEffects","code":""},{"path":"/news/index.html","id":"new-features-0-7-0","dir":"Changelog","previous_headings":"","what":"New features","title":"shinydashboardPlus 0.7.0","text":"6 new color statuses boxPlus() headers: navy, teal, orange, maroon, black purple add new argument .items rightSidebar(): useful want embed elements tabs. add dashboardFooter() add dashboardUser(), dashboardUserItem(), renderUser() userOutput() add carousel() carouselItem() new argument dashboardPagePlus: sidebar_fullCollapse enable sidebar fully collapsed shinydashboard. Fix #24, thanks @serkserk default, opening right sidebar shifts body content left, similarly left sidebar","code":""},{"path":"/news/index.html","id":"major-changes-0-7-0","dir":"Changelog","previous_headings":"","what":"major changes","title":"shinydashboardPlus 0.7.0","text":"shindashboardPlus now moved RinteRface","code":""},{"path":"/news/index.html","id":"minor-changes-0-7-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"shinydashboardPlus 0.7.0","text":"new hex icons update gallery update vignettes (RinteRface)","code":""},{"path":"/news/index.html","id":"fixes-0-7-0","dir":"Changelog","previous_headings":"","what":"Fixes","title":"shinydashboardPlus 0.7.0","text":"fix issue dashboardHeaderPlus() title NULL fix #22 thanks @trallard (missing licence)","code":""},{"path":"/news/index.html","id":"shinydashboardplus-060","dir":"Changelog","previous_headings":"","what":"shinydashboardPlus 0.6.0","title":"shinydashboardPlus 0.6.0","text":"CRAN release: 2018-09-20","code":""},{"path":"/news/index.html","id":"new-features-0-6-0","dir":"Changelog","previous_headings":"","what":"New features","title":"shinydashboardPlus 0.6.0","text":"add new flipBox() new sidebar boxPlus() function: set following arguments “enable_sidebar”, “sidebar_content”, “sidebar_width”, “sidebar_background” “sidebar_start_open” new “left_menu” argument dashboardHeaderPlus() include elements left part navbar. (addition can already right part shinydashboard) new dropdownBlock() include shiny input elements navbar left menu (optimized screen sizes) new “fixed” argument navbar (dashboardHeaderPlus()). TRUE, navbar fixed-top. (static-top default) new setZoom() function (similar setShadow()) new setPulse() function new setShake() function add “enable_preloader” “loading_duration” dashboardPagePlus() (custom preloader) update shinydashboardPlusGallery() add “style” argument dashboardLabel() change website images add “collapsed argument” userPost() show hide comments application starts. ## Bug fixes now appButton() open new window clicked now socialButton() open new window clicked show comments comments socialBox() show footer NULL socialBox() add style overflow-y auto socialBox() case 2 comments (avoid “infinite” height boxes) mobiles (small screens), navbar left menu items display inline, instead column… disable timelineItem() footer NULL center images userPostMedia() fix #8 thanks @scottyraymond (dropdownBlock() icon displaying)","code":""},{"path":"/news/index.html","id":"shinydashboardplus-050","dir":"Changelog","previous_headings":"","what":"shinydashboardPlus 0.5.0","title":"shinydashboardPlus 0.5.0","text":"CRAN release: 2018-07-05","code":""},{"path":"/news/index.html","id":"bug-fixes-0-5-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"shinydashboardPlus 0.5.0","text":"Fix important issue rightSidebar(). function called without element, triggered error number items 0 clicking starBlock(), navPillsItem() socialBlock() title reload redirect top page clicking attachmentBlock() link open new page new tab (target = “_blank”) correct vignettes title (https://cran.r-project.org/package=shinydashboardPlus) ## Breaking changes change argument name dropdownItem() (boxPlus()): “target” replaced “url”. Widely simplify rightSidebar() function: remove rightSidebarTabList(), rightSidebarTabItem() rightSidebarPanel() user interface. See discover set new rightSidebar() ## Major changes add “width” argument rightSidebar() (set 230 pixels default) improve customization. new function setShadow() set shadow hover effects elements add “active” argument rightSidebarTabContent(): see #4 add “sidebar_background” argument dashboardPagePlus() new verticalProgress() bars! new functions rightSidebar(): rightSidebarMenu(), rightSidebarMenuItem(), menuIcon() menuInfo() (see shinydashboardPlusGallery()) new dropdown menu boxPlus(): add dropdownItemList(), dropdownItem() dropdownDivider() functions (see shinydashboardPlusGallery()) add “width” “height” args timelineItemMedia() userPostMedia() remove useless content ## New Side content add pkgdown website add cran downloads readme","code":""},{"path":"/news/index.html","id":"shinydashboardplus-020","dir":"Changelog","previous_headings":"","what":"shinydashboardPlus 0.2.0","title":"shinydashboardPlus 0.2.0","text":"CRAN release: 2018-05-08 new timelines: timeLineBlock() either inside outside box new userPost function: userPostToolItemList(), userPostToolItem(), userPostMedia(), userPostToolItem() new boxProfile function: boxProfileItemList(), boxProfileItem() update shinydashboardPlusGallery() add shinydashboardPlusGallery() update examples minor fixes NOTE: mailForm working moment!","code":""},{"path":"/news/index.html","id":"shinydashboardplus-010","dir":"Changelog","previous_headings":"","what":"shinydashboardPlus 0.1.0","title":"shinydashboardPlus 0.1.0","text":"new right sidebar: rightSidebar() improved classic boxes: boxPlus() new boxes: gradientBox(), widgetUserBox(), socialBox() new box elements: boxPad(), attachmentBlock(), descriptionBlock(), productList(), navPills(), todoList(), userList(), boxComment() new buttons: appButton() socialButton() (NOTE: inputButtons!) additional elements: starBlock(), loadingState(), blockQuote(), dashboardLabel() switch shinydashboard shinydashboardPlus: dashboardHeaderPlus(), dashboardPagePlus()","code":""}]
